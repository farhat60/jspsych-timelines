{"version":3,"sources":["../../../node_modules/auto-bind/index.js","../../../node_modules/seedrandom/lib/alea.js","../../../node_modules/seedrandom/lib/xor128.js","../../../node_modules/seedrandom/lib/xorwow.js","../../../node_modules/seedrandom/lib/xorshift7.js","../../../node_modules/seedrandom/lib/xor4096.js","../../../node_modules/seedrandom/lib/tychei.js","../../../node_modules/seedrandom/seedrandom.js","../../../node_modules/seedrandom/index.js","../../../node_modules/random-words/index.js","../../../node_modules/jspsych/src/modules/plugins.ts","../../../node_modules/jspsych/src/modules/plugin-api/MediaAPI.ts","../../../node_modules/jspsych/src/migration.ts","../../../node_modules/jspsych/src/index.ts","../../../node_modules/@jspsych/plugin-html-button-response/package.json","../../../node_modules/@jspsych/plugin-html-button-response/src/index.ts","../../../node_modules/@jspsych/plugin-instructions/package.json","../../../node_modules/@jspsych/plugin-instructions/src/index.ts","../src/test-items.ts","../src/text.ts","../src/index.ts"],"names":["self","module","define","me","seed","seedrandom","prng","t","i","j","s","require_seedrandom","word","ParameterType","version","index"],"mappings":"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","file":"index.global.js","sourcesContent":["'use strict';\n\n// Gets all non-builtin properties up the prototype chain\nconst getAllProperties = object => {\n\tconst properties = new Set();\n\n\tdo {\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tproperties.add([object, key]);\n\t\t}\n\t} while ((object = Reflect.getPrototypeOf(object)) && object !== Object.prototype);\n\n\treturn properties;\n};\n\nmodule.exports = (self, {include, exclude} = {}) => {\n\tconst filter = key => {\n\t\tconst match = pattern => typeof pattern === 'string' ? key === pattern : pattern.test(key);\n\n\t\tif (include) {\n\t\t\treturn include.some(match);\n\t\t}\n\n\t\tif (exclude) {\n\t\t\treturn !exclude.some(match);\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tfor (const [object, key] of getAllProperties(self.constructor.prototype)) {\n\t\tif (key === 'constructor' || !filter(key)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst descriptor = Reflect.getOwnPropertyDescriptor(object, key);\n\t\tif (descriptor && typeof descriptor.value === 'function') {\n\t\t\tself[key] = self[key].bind(self);\n\t\t}\n\t}\n\n\treturn self;\n};\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","var seedrandom = require('seedrandom');\n\nvar wordList = [\n  // Borrowed from xkcd password generator which borrowed it from wherever\n  \"ability\",\"able\",\"aboard\",\"about\",\"above\",\"accept\",\"accident\",\"according\",\n  \"account\",\"accurate\",\"acres\",\"across\",\"act\",\"action\",\"active\",\"activity\",\n  \"actual\",\"actually\",\"add\",\"addition\",\"additional\",\"adjective\",\"adult\",\"adventure\",\n  \"advice\",\"affect\",\"afraid\",\"after\",\"afternoon\",\"again\",\"against\",\"age\",\n  \"ago\",\"agree\",\"ahead\",\"aid\",\"air\",\"airplane\",\"alike\",\"alive\",\n  \"all\",\"allow\",\"almost\",\"alone\",\"along\",\"aloud\",\"alphabet\",\"already\",\n  \"also\",\"although\",\"am\",\"among\",\"amount\",\"ancient\",\"angle\",\"angry\",\n  \"animal\",\"announced\",\"another\",\"answer\",\"ants\",\"any\",\"anybody\",\"anyone\",\n  \"anything\",\"anyway\",\"anywhere\",\"apart\",\"apartment\",\"appearance\",\"apple\",\"applied\",\n  \"appropriate\",\"are\",\"area\",\"arm\",\"army\",\"around\",\"arrange\",\"arrangement\",\n  \"arrive\",\"arrow\",\"art\",\"article\",\"as\",\"aside\",\"ask\",\"asleep\",\n  \"at\",\"ate\",\"atmosphere\",\"atom\",\"atomic\",\"attached\",\"attack\",\"attempt\",\n  \"attention\",\"audience\",\"author\",\"automobile\",\"available\",\"average\",\"avoid\",\"aware\",\n  \"away\",\"baby\",\"back\",\"bad\",\"badly\",\"bag\",\"balance\",\"ball\",\n  \"balloon\",\"band\",\"bank\",\"bar\",\"bare\",\"bark\",\"barn\",\"base\",\n  \"baseball\",\"basic\",\"basis\",\"basket\",\"bat\",\"battle\",\"be\",\"bean\",\n  \"bear\",\"beat\",\"beautiful\",\"beauty\",\"became\",\"because\",\"become\",\"becoming\",\n  \"bee\",\"been\",\"before\",\"began\",\"beginning\",\"begun\",\"behavior\",\"behind\",\n  \"being\",\"believed\",\"bell\",\"belong\",\"below\",\"belt\",\"bend\",\"beneath\",\n  \"bent\",\"beside\",\"best\",\"bet\",\"better\",\"between\",\"beyond\",\"bicycle\",\n  \"bigger\",\"biggest\",\"bill\",\"birds\",\"birth\",\"birthday\",\"bit\",\"bite\",\n  \"black\",\"blank\",\"blanket\",\"blew\",\"blind\",\"block\",\"blood\",\"blow\",\n  \"blue\",\"board\",\"boat\",\"body\",\"bone\",\"book\",\"border\",\"born\",\n  \"both\",\"bottle\",\"bottom\",\"bound\",\"bow\",\"bowl\",\"box\",\"boy\",\n  \"brain\",\"branch\",\"brass\",\"brave\",\"bread\",\"break\",\"breakfast\",\"breath\",\n  \"breathe\",\"breathing\",\"breeze\",\"brick\",\"bridge\",\"brief\",\"bright\",\"bring\",\n  \"broad\",\"broke\",\"broken\",\"brother\",\"brought\",\"brown\",\"brush\",\"buffalo\",\n  \"build\",\"building\",\"built\",\"buried\",\"burn\",\"burst\",\"bus\",\"bush\",\n  \"business\",\"busy\",\"but\",\"butter\",\"buy\",\"by\",\"cabin\",\"cage\",\n  \"cake\",\"call\",\"calm\",\"came\",\"camera\",\"camp\",\"can\",\"canal\",\n  \"cannot\",\"cap\",\"capital\",\"captain\",\"captured\",\"car\",\"carbon\",\"card\",\n  \"care\",\"careful\",\"carefully\",\"carried\",\"carry\",\"case\",\"cast\",\"castle\",\n  \"cat\",\"catch\",\"cattle\",\"caught\",\"cause\",\"cave\",\"cell\",\"cent\",\n  \"center\",\"central\",\"century\",\"certain\",\"certainly\",\"chain\",\"chair\",\"chamber\",\n  \"chance\",\"change\",\"changing\",\"chapter\",\"character\",\"characteristic\",\"charge\",\"chart\",\n  \"check\",\"cheese\",\"chemical\",\"chest\",\"chicken\",\"chief\",\"child\",\"children\",\n  \"choice\",\"choose\",\"chose\",\"chosen\",\"church\",\"circle\",\"circus\",\"citizen\",\n  \"city\",\"class\",\"classroom\",\"claws\",\"clay\",\"clean\",\"clear\",\"clearly\",\n  \"climate\",\"climb\",\"clock\",\"close\",\"closely\",\"closer\",\"cloth\",\"clothes\",\n  \"clothing\",\"cloud\",\"club\",\"coach\",\"coal\",\"coast\",\"coat\",\"coffee\",\n  \"cold\",\"collect\",\"college\",\"colony\",\"color\",\"column\",\"combination\",\"combine\",\n  \"come\",\"comfortable\",\"coming\",\"command\",\"common\",\"community\",\"company\",\"compare\",\n  \"compass\",\"complete\",\"completely\",\"complex\",\"composed\",\"composition\",\"compound\",\"concerned\",\n  \"condition\",\"congress\",\"connected\",\"consider\",\"consist\",\"consonant\",\"constantly\",\"construction\",\n  \"contain\",\"continent\",\"continued\",\"contrast\",\"control\",\"conversation\",\"cook\",\"cookies\",\n  \"cool\",\"copper\",\"copy\",\"corn\",\"corner\",\"correct\",\"correctly\",\"cost\",\n  \"cotton\",\"could\",\"count\",\"country\",\"couple\",\"courage\",\"course\",\"court\",\n  \"cover\",\"cow\",\"cowboy\",\"crack\",\"cream\",\"create\",\"creature\",\"crew\",\n  \"crop\",\"cross\",\"crowd\",\"cry\",\"cup\",\"curious\",\"current\",\"curve\",\n  \"customs\",\"cut\",\"cutting\",\"daily\",\"damage\",\"dance\",\"danger\",\"dangerous\",\n  \"dark\",\"darkness\",\"date\",\"daughter\",\"dawn\",\"day\",\"dead\",\"deal\",\n  \"dear\",\"death\",\"decide\",\"declared\",\"deep\",\"deeply\",\"deer\",\"definition\",\n  \"degree\",\"depend\",\"depth\",\"describe\",\"desert\",\"design\",\"desk\",\"detail\",\n  \"determine\",\"develop\",\"development\",\"diagram\",\"diameter\",\"did\",\"die\",\"differ\",\n  \"difference\",\"different\",\"difficult\",\"difficulty\",\"dig\",\"dinner\",\"direct\",\"direction\",\n  \"directly\",\"dirt\",\"dirty\",\"disappear\",\"discover\",\"discovery\",\"discuss\",\"discussion\",\n  \"disease\",\"dish\",\"distance\",\"distant\",\"divide\",\"division\",\"do\",\"doctor\",\n  \"does\",\"dog\",\"doing\",\"doll\",\"dollar\",\"done\",\"donkey\",\"door\",\n  \"dot\",\"double\",\"doubt\",\"down\",\"dozen\",\"draw\",\"drawn\",\"dream\",\n  \"dress\",\"drew\",\"dried\",\"drink\",\"drive\",\"driven\",\"driver\",\"driving\",\n  \"drop\",\"dropped\",\"drove\",\"dry\",\"duck\",\"due\",\"dug\",\"dull\",\n  \"during\",\"dust\",\"duty\",\"each\",\"eager\",\"ear\",\"earlier\",\"early\",\n  \"earn\",\"earth\",\"easier\",\"easily\",\"east\",\"easy\",\"eat\",\"eaten\",\n  \"edge\",\"education\",\"effect\",\"effort\",\"egg\",\"eight\",\"either\",\"electric\",\n  \"electricity\",\"element\",\"elephant\",\"eleven\",\"else\",\"empty\",\"end\",\"enemy\",\n  \"energy\",\"engine\",\"engineer\",\"enjoy\",\"enough\",\"enter\",\"entire\",\"entirely\",\n  \"environment\",\"equal\",\"equally\",\"equator\",\"equipment\",\"escape\",\"especially\",\"essential\",\n  \"establish\",\"even\",\"evening\",\"event\",\"eventually\",\"ever\",\"every\",\"everybody\",\n  \"everyone\",\"everything\",\"everywhere\",\"evidence\",\"exact\",\"exactly\",\"examine\",\"example\",\n  \"excellent\",\"except\",\"exchange\",\"excited\",\"excitement\",\"exciting\",\"exclaimed\",\"exercise\",\n  \"exist\",\"expect\",\"experience\",\"experiment\",\"explain\",\"explanation\",\"explore\",\"express\",\n  \"expression\",\"extra\",\"eye\",\"face\",\"facing\",\"fact\",\"factor\",\"factory\",\n  \"failed\",\"fair\",\"fairly\",\"fall\",\"fallen\",\"familiar\",\"family\",\"famous\",\n  \"far\",\"farm\",\"farmer\",\"farther\",\"fast\",\"fastened\",\"faster\",\"fat\",\n  \"father\",\"favorite\",\"fear\",\"feathers\",\"feature\",\"fed\",\"feed\",\"feel\",\n  \"feet\",\"fell\",\"fellow\",\"felt\",\"fence\",\"few\",\"fewer\",\"field\",\n  \"fierce\",\"fifteen\",\"fifth\",\"fifty\",\"fight\",\"fighting\",\"figure\",\"fill\",\n  \"film\",\"final\",\"finally\",\"find\",\"fine\",\"finest\",\"finger\",\"finish\",\n  \"fire\",\"fireplace\",\"firm\",\"first\",\"fish\",\"five\",\"fix\",\"flag\",\n  \"flame\",\"flat\",\"flew\",\"flies\",\"flight\",\"floating\",\"floor\",\"flow\",\n  \"flower\",\"fly\",\"fog\",\"folks\",\"follow\",\"food\",\"foot\",\"football\",\n  \"for\",\"force\",\"foreign\",\"forest\",\"forget\",\"forgot\",\"forgotten\",\"form\",\n  \"former\",\"fort\",\"forth\",\"forty\",\"forward\",\"fought\",\"found\",\"four\",\n  \"fourth\",\"fox\",\"frame\",\"free\",\"freedom\",\"frequently\",\"fresh\",\"friend\",\n  \"friendly\",\"frighten\",\"frog\",\"from\",\"front\",\"frozen\",\"fruit\",\"fuel\",\n  \"full\",\"fully\",\"fun\",\"function\",\"funny\",\"fur\",\"furniture\",\"further\",\n  \"future\",\"gain\",\"game\",\"garage\",\"garden\",\"gas\",\"gasoline\",\"gate\",\n  \"gather\",\"gave\",\"general\",\"generally\",\"gentle\",\"gently\",\"get\",\"getting\",\n  \"giant\",\"gift\",\"girl\",\"give\",\"given\",\"giving\",\"glad\",\"glass\",\n  \"globe\",\"go\",\"goes\",\"gold\",\"golden\",\"gone\",\"good\",\"goose\",\n  \"got\",\"government\",\"grabbed\",\"grade\",\"gradually\",\"grain\",\"grandfather\",\"grandmother\",\n  \"graph\",\"grass\",\"gravity\",\"gray\",\"great\",\"greater\",\"greatest\",\"greatly\",\n  \"green\",\"grew\",\"ground\",\"group\",\"grow\",\"grown\",\"growth\",\"guard\",\n  \"guess\",\"guide\",\"gulf\",\"gun\",\"habit\",\"had\",\"hair\",\"half\",\n  \"halfway\",\"hall\",\"hand\",\"handle\",\"handsome\",\"hang\",\"happen\",\"happened\",\n  \"happily\",\"happy\",\"harbor\",\"hard\",\"harder\",\"hardly\",\"has\",\"hat\",\n  \"have\",\"having\",\"hay\",\"he\",\"headed\",\"heading\",\"health\",\"heard\",\n  \"hearing\",\"heart\",\"heat\",\"heavy\",\"height\",\"held\",\"hello\",\"help\",\n  \"helpful\",\"her\",\"herd\",\"here\",\"herself\",\"hidden\",\"hide\",\"high\",\n  \"higher\",\"highest\",\"highway\",\"hill\",\"him\",\"himself\",\"his\",\"history\",\n  \"hit\",\"hold\",\"hole\",\"hollow\",\"home\",\"honor\",\"hope\",\"horn\",\n  \"horse\",\"hospital\",\"hot\",\"hour\",\"house\",\"how\",\"however\",\"huge\",\n  \"human\",\"hundred\",\"hung\",\"hungry\",\"hunt\",\"hunter\",\"hurried\",\"hurry\",\n  \"hurt\",\"husband\",\"ice\",\"idea\",\"identity\",\"if\",\"ill\",\"image\",\n  \"imagine\",\"immediately\",\"importance\",\"important\",\"impossible\",\"improve\",\"in\",\"inch\",\n  \"include\",\"including\",\"income\",\"increase\",\"indeed\",\"independent\",\"indicate\",\"individual\",\n  \"industrial\",\"industry\",\"influence\",\"information\",\"inside\",\"instance\",\"instant\",\"instead\",\n  \"instrument\",\"interest\",\"interior\",\"into\",\"introduced\",\"invented\",\"involved\",\"iron\",\n  \"is\",\"island\",\"it\",\"its\",\"itself\",\"jack\",\"jar\",\"jet\",\n  \"job\",\"join\",\"joined\",\"journey\",\"joy\",\"judge\",\"jump\",\"jungle\",\n  \"just\",\"keep\",\"kept\",\"key\",\"kids\",\"kill\",\"kind\",\"kitchen\",\n  \"knew\",\"knife\",\"know\",\"knowledge\",\"known\",\"label\",\"labor\",\"lack\",\n  \"lady\",\"laid\",\"lake\",\"lamp\",\"land\",\"language\",\"large\",\"larger\",\n  \"largest\",\"last\",\"late\",\"later\",\"laugh\",\"law\",\"lay\",\"layers\",\n  \"lead\",\"leader\",\"leaf\",\"learn\",\"least\",\"leather\",\"leave\",\"leaving\",\n  \"led\",\"left\",\"leg\",\"length\",\"lesson\",\"let\",\"letter\",\"level\",\n  \"library\",\"lie\",\"life\",\"lift\",\"light\",\"like\",\"likely\",\"limited\",\n  \"line\",\"lion\",\"lips\",\"liquid\",\"list\",\"listen\",\"little\",\"live\",\n  \"living\",\"load\",\"local\",\"locate\",\"location\",\"log\",\"lonely\",\"long\",\n  \"longer\",\"look\",\"loose\",\"lose\",\"loss\",\"lost\",\"lot\",\"loud\",\n  \"love\",\"lovely\",\"low\",\"lower\",\"luck\",\"lucky\",\"lunch\",\"lungs\",\n  \"lying\",\"machine\",\"machinery\",\"mad\",\"made\",\"magic\",\"magnet\",\"mail\",\n  \"main\",\"mainly\",\"major\",\"make\",\"making\",\"man\",\"managed\",\"manner\",\n  \"manufacturing\",\"many\",\"map\",\"mark\",\"market\",\"married\",\"mass\",\"massage\",\n  \"master\",\"material\",\"mathematics\",\"matter\",\"may\",\"maybe\",\"me\",\"meal\",\n  \"mean\",\"means\",\"meant\",\"measure\",\"meat\",\"medicine\",\"meet\",\"melted\",\n  \"member\",\"memory\",\"men\",\"mental\",\"merely\",\"met\",\"metal\",\"method\",\n  \"mice\",\"middle\",\"might\",\"mighty\",\"mile\",\"military\",\"milk\",\"mill\",\n  \"mind\",\"mine\",\"minerals\",\"minute\",\"mirror\",\"missing\",\"mission\",\"mistake\",\n  \"mix\",\"mixture\",\"model\",\"modern\",\"molecular\",\"moment\",\"money\",\"monkey\",\n  \"month\",\"mood\",\"moon\",\"more\",\"morning\",\"most\",\"mostly\",\"mother\",\n  \"motion\",\"motor\",\"mountain\",\"mouse\",\"mouth\",\"move\",\"movement\",\"movie\",\n  \"moving\",\"mud\",\"muscle\",\"music\",\"musical\",\"must\",\"my\",\"myself\",\n  \"mysterious\",\"nails\",\"name\",\"nation\",\"national\",\"native\",\"natural\",\"naturally\",\n  \"nature\",\"near\",\"nearby\",\"nearer\",\"nearest\",\"nearly\",\"necessary\",\"neck\",\n  \"needed\",\"needle\",\"needs\",\"negative\",\"neighbor\",\"neighborhood\",\"nervous\",\"nest\",\n  \"never\",\"new\",\"news\",\"newspaper\",\"next\",\"nice\",\"night\",\"nine\",\n  \"no\",\"nobody\",\"nodded\",\"noise\",\"none\",\"noon\",\"nor\",\"north\",\n  \"nose\",\"not\",\"note\",\"noted\",\"nothing\",\"notice\",\"noun\",\"now\",\n  \"number\",\"numeral\",\"nuts\",\"object\",\"observe\",\"obtain\",\"occasionally\",\"occur\",\n  \"ocean\",\"of\",\"off\",\"offer\",\"office\",\"officer\",\"official\",\"oil\",\n  \"old\",\"older\",\"oldest\",\"on\",\"once\",\"one\",\"only\",\"onto\",\n  \"open\",\"operation\",\"opinion\",\"opportunity\",\"opposite\",\"or\",\"orange\",\"orbit\",\n  \"order\",\"ordinary\",\"organization\",\"organized\",\"origin\",\"original\",\"other\",\"ought\",\n  \"our\",\"ourselves\",\"out\",\"outer\",\"outline\",\"outside\",\"over\",\"own\",\n  \"owner\",\"oxygen\",\"pack\",\"package\",\"page\",\"paid\",\"pain\",\"paint\",\n  \"pair\",\"palace\",\"pale\",\"pan\",\"paper\",\"paragraph\",\"parallel\",\"parent\",\n  \"park\",\"part\",\"particles\",\"particular\",\"particularly\",\"partly\",\"parts\",\"party\",\n  \"pass\",\"passage\",\"past\",\"path\",\"pattern\",\"pay\",\"peace\",\"pen\",\n  \"pencil\",\"people\",\"per\",\"percent\",\"perfect\",\"perfectly\",\"perhaps\",\"period\",\n  \"person\",\"personal\",\"pet\",\"phrase\",\"physical\",\"piano\",\"pick\",\"picture\",\n  \"pictured\",\"pie\",\"piece\",\"pig\",\"pile\",\"pilot\",\"pine\",\"pink\",\n  \"pipe\",\"pitch\",\"place\",\"plain\",\"plan\",\"plane\",\"planet\",\"planned\",\n  \"planning\",\"plant\",\"plastic\",\"plate\",\"plates\",\"play\",\"pleasant\",\"please\",\n  \"pleasure\",\"plenty\",\"plural\",\"plus\",\"pocket\",\"poem\",\"poet\",\"poetry\",\n  \"point\",\"pole\",\"police\",\"policeman\",\"political\",\"pond\",\"pony\",\"pool\",\n  \"poor\",\"popular\",\"population\",\"porch\",\"port\",\"position\",\"positive\",\"possible\",\n  \"possibly\",\"post\",\"pot\",\"potatoes\",\"pound\",\"pour\",\"powder\",\"power\",\n  \"powerful\",\"practical\",\"practice\",\"prepare\",\"present\",\"president\",\"press\",\"pressure\",\n  \"pretty\",\"prevent\",\"previous\",\"price\",\"pride\",\"primitive\",\"principal\",\"principle\",\n  \"printed\",\"private\",\"prize\",\"probably\",\"problem\",\"process\",\"produce\",\"product\",\n  \"production\",\"program\",\"progress\",\"promised\",\"proper\",\"properly\",\"property\",\"protection\",\n  \"proud\",\"prove\",\"provide\",\"public\",\"pull\",\"pupil\",\"pure\",\"purple\",\n  \"purpose\",\"push\",\"put\",\"putting\",\"quarter\",\"queen\",\"question\",\"quick\",\n  \"quickly\",\"quiet\",\"quietly\",\"quite\",\"rabbit\",\"race\",\"radio\",\"railroad\",\n  \"rain\",\"raise\",\"ran\",\"ranch\",\"range\",\"rapidly\",\"rate\",\"rather\",\n  \"raw\",\"rays\",\"reach\",\"read\",\"reader\",\"ready\",\"real\",\"realize\",\n  \"rear\",\"reason\",\"recall\",\"receive\",\"recent\",\"recently\",\"recognize\",\"record\",\n  \"red\",\"refer\",\"refused\",\"region\",\"regular\",\"related\",\"relationship\",\"religious\",\n  \"remain\",\"remarkable\",\"remember\",\"remove\",\"repeat\",\"replace\",\"replied\",\"report\",\n  \"represent\",\"require\",\"research\",\"respect\",\"rest\",\"result\",\"return\",\"review\",\n  \"rhyme\",\"rhythm\",\"rice\",\"rich\",\"ride\",\"riding\",\"right\",\"ring\",\n  \"rise\",\"rising\",\"river\",\"road\",\"roar\",\"rock\",\"rocket\",\"rocky\",\n  \"rod\",\"roll\",\"roof\",\"room\",\"root\",\"rope\",\"rose\",\"rough\",\n  \"round\",\"route\",\"row\",\"rubbed\",\"rubber\",\"rule\",\"ruler\",\"run\",\n  \"running\",\"rush\",\"sad\",\"saddle\",\"safe\",\"safety\",\"said\",\"sail\",\n  \"sale\",\"salmon\",\"salt\",\"same\",\"sand\",\"sang\",\"sat\",\"satellites\",\n  \"satisfied\",\"save\",\"saved\",\"saw\",\"say\",\"scale\",\"scared\",\"scene\",\n  \"school\",\"science\",\"scientific\",\"scientist\",\"score\",\"screen\",\"sea\",\"search\",\n  \"season\",\"seat\",\"second\",\"secret\",\"section\",\"see\",\"seed\",\"seeing\",\n  \"seems\",\"seen\",\"seldom\",\"select\",\"selection\",\"sell\",\"send\",\"sense\",\n  \"sent\",\"sentence\",\"separate\",\"series\",\"serious\",\"serve\",\"service\",\"sets\",\n  \"setting\",\"settle\",\"settlers\",\"seven\",\"several\",\"shade\",\"shadow\",\"shake\",\n  \"shaking\",\"shall\",\"shallow\",\"shape\",\"share\",\"sharp\",\"she\",\"sheep\",\n  \"sheet\",\"shelf\",\"shells\",\"shelter\",\"shine\",\"shinning\",\"ship\",\"shirt\",\n  \"shoe\",\"shoot\",\"shop\",\"shore\",\"short\",\"shorter\",\"shot\",\"should\",\n  \"shoulder\",\"shout\",\"show\",\"shown\",\"shut\",\"sick\",\"sides\",\"sight\",\n  \"sign\",\"signal\",\"silence\",\"silent\",\"silk\",\"silly\",\"silver\",\"similar\",\n  \"simple\",\"simplest\",\"simply\",\"since\",\"sing\",\"single\",\"sink\",\"sister\",\n  \"sit\",\"sitting\",\"situation\",\"six\",\"size\",\"skill\",\"skin\",\"sky\",\n  \"slabs\",\"slave\",\"sleep\",\"slept\",\"slide\",\"slight\",\"slightly\",\"slip\",\n  \"slipped\",\"slope\",\"slow\",\"slowly\",\"small\",\"smaller\",\"smallest\",\"smell\",\n  \"smile\",\"smoke\",\"smooth\",\"snake\",\"snow\",\"so\",\"soap\",\"social\",\n  \"society\",\"soft\",\"softly\",\"soil\",\"solar\",\"sold\",\"soldier\",\"solid\",\n  \"solution\",\"solve\",\"some\",\"somebody\",\"somehow\",\"someone\",\"something\",\"sometime\",\n  \"somewhere\",\"son\",\"song\",\"soon\",\"sort\",\"sound\",\"source\",\"south\",\n  \"southern\",\"space\",\"speak\",\"special\",\"species\",\"specific\",\"speech\",\"speed\",\n  \"spell\",\"spend\",\"spent\",\"spider\",\"spin\",\"spirit\",\"spite\",\"split\",\n  \"spoken\",\"sport\",\"spread\",\"spring\",\"square\",\"stage\",\"stairs\",\"stand\",\n  \"standard\",\"star\",\"stared\",\"start\",\"state\",\"statement\",\"station\",\"stay\",\n  \"steady\",\"steam\",\"steel\",\"steep\",\"stems\",\"step\",\"stepped\",\"stick\",\n  \"stiff\",\"still\",\"stock\",\"stomach\",\"stone\",\"stood\",\"stop\",\"stopped\",\n  \"store\",\"storm\",\"story\",\"stove\",\"straight\",\"strange\",\"stranger\",\"straw\",\n  \"stream\",\"street\",\"strength\",\"stretch\",\"strike\",\"string\",\"strip\",\"strong\",\n  \"stronger\",\"struck\",\"structure\",\"struggle\",\"stuck\",\"student\",\"studied\",\"studying\",\n  \"subject\",\"substance\",\"success\",\"successful\",\"such\",\"sudden\",\"suddenly\",\"sugar\",\n  \"suggest\",\"suit\",\"sum\",\"summer\",\"sun\",\"sunlight\",\"supper\",\"supply\",\n  \"support\",\"suppose\",\"sure\",\"surface\",\"surprise\",\"surrounded\",\"swam\",\"sweet\",\n  \"swept\",\"swim\",\"swimming\",\"swing\",\"swung\",\"syllable\",\"symbol\",\"system\",\n  \"table\",\"tail\",\"take\",\"taken\",\"tales\",\"talk\",\"tall\",\"tank\",\n  \"tape\",\"task\",\"taste\",\"taught\",\"tax\",\"tea\",\"teach\",\"teacher\",\n  \"team\",\"tears\",\"teeth\",\"telephone\",\"television\",\"tell\",\"temperature\",\"ten\",\n  \"tent\",\"term\",\"terrible\",\"test\",\"than\",\"thank\",\"that\",\"thee\",\n  \"them\",\"themselves\",\"then\",\"theory\",\"there\",\"therefore\",\"these\",\"they\",\n  \"thick\",\"thin\",\"thing\",\"think\",\"third\",\"thirty\",\"this\",\"those\",\n  \"thou\",\"though\",\"thought\",\"thousand\",\"thread\",\"three\",\"threw\",\"throat\",\n  \"through\",\"throughout\",\"throw\",\"thrown\",\"thumb\",\"thus\",\"thy\",\"tide\",\n  \"tie\",\"tight\",\"tightly\",\"till\",\"time\",\"tin\",\"tiny\",\"tip\",\n  \"tired\",\"title\",\"to\",\"tobacco\",\"today\",\"together\",\"told\",\"tomorrow\",\n  \"tone\",\"tongue\",\"tonight\",\"too\",\"took\",\"tool\",\"top\",\"topic\",\n  \"torn\",\"total\",\"touch\",\"toward\",\"tower\",\"town\",\"toy\",\"trace\",\n  \"track\",\"trade\",\"traffic\",\"trail\",\"train\",\"transportation\",\"trap\",\"travel\",\n  \"treated\",\"tree\",\"triangle\",\"tribe\",\"trick\",\"tried\",\"trip\",\"troops\",\n  \"tropical\",\"trouble\",\"truck\",\"trunk\",\"truth\",\"try\",\"tube\",\"tune\",\n  \"turn\",\"twelve\",\"twenty\",\"twice\",\"two\",\"type\",\"typical\",\"uncle\",\n  \"under\",\"underline\",\"understanding\",\"unhappy\",\"union\",\"unit\",\"universe\",\"unknown\",\n  \"unless\",\"until\",\"unusual\",\"up\",\"upon\",\"upper\",\"upward\",\"us\",\n  \"use\",\"useful\",\"using\",\"usual\",\"usually\",\"valley\",\"valuable\",\"value\",\n  \"vapor\",\"variety\",\"various\",\"vast\",\"vegetable\",\"verb\",\"vertical\",\"very\",\n  \"vessels\",\"victory\",\"view\",\"village\",\"visit\",\"visitor\",\"voice\",\"volume\",\n  \"vote\",\"vowel\",\"voyage\",\"wagon\",\"wait\",\"walk\",\"wall\",\"want\",\n  \"war\",\"warm\",\"warn\",\"was\",\"wash\",\"waste\",\"watch\",\"water\",\n  \"wave\",\"way\",\"we\",\"weak\",\"wealth\",\"wear\",\"weather\",\"week\",\n  \"weigh\",\"weight\",\"welcome\",\"well\",\"went\",\"were\",\"west\",\"western\",\n  \"wet\",\"whale\",\"what\",\"whatever\",\"wheat\",\"wheel\",\"when\",\"whenever\",\n  \"where\",\"wherever\",\"whether\",\"which\",\"while\",\"whispered\",\"whistle\",\"white\",\n  \"who\",\"whole\",\"whom\",\"whose\",\"why\",\"wide\",\"widely\",\"wife\",\n  \"wild\",\"will\",\"willing\",\"win\",\"wind\",\"window\",\"wing\",\"winter\",\n  \"wire\",\"wise\",\"wish\",\"with\",\"within\",\"without\",\"wolf\",\"women\",\n  \"won\",\"wonder\",\"wonderful\",\"wood\",\"wooden\",\"wool\",\"word\",\"wore\",\n  \"work\",\"worker\",\"world\",\"worried\",\"worry\",\"worse\",\"worth\",\"would\",\n  \"wrapped\",\"write\",\"writer\",\"writing\",\"written\",\"wrong\",\"wrote\",\"yard\",\n  \"year\",\"yellow\",\"yes\",\"yesterday\",\"yet\",\"you\",\"young\",\"younger\",\n  \"your\",\"yourself\",\"youth\",\"zero\",\"zebra\",\"zipper\",\"zoo\",\"zulu\"\n];\n\nfunction words(options) {\n  // initalize random number generator for words if options.seed is provided\n  const random = options?.seed ? new seedrandom(options.seed) : null;\n\n  function word() {\n    if (options && options.maxLength > 1) {\n      return generateWordWithMaxLength();\n    } else {\n      return generateRandomWord();\n    }\n  }\n\n  function generateWordWithMaxLength() {\n    var rightSize = false;\n    var wordUsed;\n    while (!rightSize) {  \n      wordUsed = generateRandomWord();\n      if(wordUsed.length <= options.maxLength) {\n        rightSize = true;\n      }\n\n    }\n    return wordUsed;\n  }\n\n  function generateRandomWord() {\n    return wordList[randInt(wordList.length)];\n  }\n\n  // random int as seeded by options.seed if applicable, or Math.random() otherwise\n  function randInt(lessThan) {\n    const r = random ? random() : Math.random();\n    return Math.floor(r * lessThan);\n  }\n\n  // No arguments = generate one word\n  if (typeof(options) === 'undefined') {\n    return word();\n  }\n\n  // Just a number = return that many words\n  if (typeof(options) === 'number') {\n    options = { exactly: options };\n  }\n\n  // options supported: exactly, min, max, join\n  if (options.exactly) {\n    options.min = options.exactly;\n    options.max = options.exactly;\n  }\n  \n  // not a number = one word par string\n  if (typeof(options.wordsPerString) !== 'number') {\n    options.wordsPerString = 1;\n  }\n\n  //not a function = returns the raw word\n  if (typeof(options.formatter) !== 'function') {\n    options.formatter = (word) => word;\n  }\n\n  //not a string = separator is a space\n  if (typeof(options.separator) !== 'string') {\n    options.separator = ' ';\n  }\n\n  var total = options.min + randInt(options.max + 1 - options.min);\n  var results = [];\n  var token = '';\n  var relativeIndex = 0;\n\n  for (var i = 0; (i < total * options.wordsPerString); i++) {\n    if (relativeIndex === options.wordsPerString - 1) {\n      token += options.formatter(word(), relativeIndex);\n    }\n    else {\n      token += options.formatter(word(), relativeIndex) + options.separator;\n    }\n    relativeIndex++;\n    if ((i + 1) % options.wordsPerString === 0) {\n      results.push(token);\n      token = ''; \n      relativeIndex = 0;\n    }\n   \n  }\n  if (typeof options.join === 'string') {\n    results = results.join(options.join);\n  }\n\n  return results;\n}\n\nmodule.exports = words;\n// Export the word list as it is often useful\nwords.wordList = wordList;\n","import { SetRequired } from \"type-fest\";\n\nimport { SimulationMode, SimulationOptions, TrialDescription, TrialResult } from \"../timeline\";\n\n/**\n * Parameter types for plugins\n */\nexport enum ParameterType {\n  BOOL,\n  STRING,\n  INT,\n  FLOAT,\n  FUNCTION,\n  KEY,\n  KEYS,\n  SELECT,\n  HTML_STRING,\n  IMAGE,\n  AUDIO,\n  VIDEO,\n  OBJECT,\n  COMPLEX,\n  TIMELINE,\n}\n\ntype ParameterTypeMap = {\n  [ParameterType.BOOL]: boolean;\n  [ParameterType.STRING]: string;\n  [ParameterType.INT]: number;\n  [ParameterType.FLOAT]: number;\n  [ParameterType.FUNCTION]: (...args: any[]) => any;\n  [ParameterType.KEY]: string;\n  [ParameterType.KEYS]: string[] | \"ALL_KEYS\" | \"NO_KEYS\";\n  [ParameterType.SELECT]: any;\n  [ParameterType.HTML_STRING]: string;\n  [ParameterType.IMAGE]: string;\n  [ParameterType.AUDIO]: string;\n  [ParameterType.VIDEO]: string;\n  [ParameterType.OBJECT]: object;\n  [ParameterType.COMPLEX]: any;\n  [ParameterType.TIMELINE]: any;\n};\n\ntype PreloadParameterType = ParameterType.AUDIO | ParameterType.VIDEO | ParameterType.IMAGE;\n\nexport type ParameterInfo = (\n  | { type: Exclude<ParameterType, ParameterType.COMPLEX | PreloadParameterType> }\n  | { type: ParameterType.COMPLEX; nested?: ParameterInfos }\n  | { type: PreloadParameterType; preload?: boolean }\n) & {\n  array?: boolean;\n  pretty_name?: string;\n  default?: any;\n};\n\nexport type ParameterInfos = Record<string, ParameterInfo>;\n\ntype InferredParameter<I extends ParameterInfo> = I[\"array\"] extends true\n  ? Array<ParameterTypeMap[I[\"type\"]]>\n  : ParameterTypeMap[I[\"type\"]];\n\ntype RequiredParameterNames<I extends ParameterInfos> = {\n  [K in keyof I]: I[K][\"default\"] extends undefined ? K : never;\n}[keyof I];\n\ntype InferredParameters<I extends ParameterInfos> = SetRequired<\n  {\n    [Property in keyof I]?: InferredParameter<I[Property]>;\n  },\n  RequiredParameterNames<I>\n>;\n\nexport const universalPluginParameters = <const>{\n  /**\n   * Data to add to this trial (key-value pairs)\n   */\n  data: {\n    type: ParameterType.OBJECT,\n    pretty_name: \"Data\",\n    default: {},\n  },\n  /**\n   * Function to execute when trial begins\n   */\n  on_start: {\n    type: ParameterType.FUNCTION,\n    pretty_name: \"On start\",\n    default: function () {\n      return;\n    },\n  },\n  /**\n   * Function to execute when trial is finished\n   */\n  on_finish: {\n    type: ParameterType.FUNCTION,\n    pretty_name: \"On finish\",\n    default: function () {\n      return;\n    },\n  },\n  /**\n   * Function to execute after the trial has loaded\n   */\n  on_load: {\n    type: ParameterType.FUNCTION,\n    pretty_name: \"On load\",\n    default: function () {\n      return;\n    },\n  },\n  /**\n   * Length of gap between the end of this trial and the start of the next trial\n   */\n  post_trial_gap: {\n    type: ParameterType.INT,\n    pretty_name: \"Post trial gap\",\n    default: 0,\n  },\n  /**\n   * A list of CSS classes to add to the jsPsych display element for the duration of this trial\n   */\n  css_classes: {\n    type: ParameterType.STRING,\n    pretty_name: \"Custom CSS classes\",\n    default: \"\",\n  },\n  /**\n   * Options to control simulation mode for the trial.\n   */\n  simulation_options: {\n    type: ParameterType.COMPLEX,\n    default: {},\n  },\n};\n\nexport type UniversalPluginParameters = InferredParameters<typeof universalPluginParameters>;\n\nexport interface PluginInfo {\n  name: string;\n  version?: string;\n  parameters: ParameterInfos;\n  data?: ParameterInfos;\n  citations?: Record<string, string> | string;\n}\n\nexport interface JsPsychPlugin<I extends PluginInfo> {\n  trial(\n    display_element: HTMLElement,\n    trial: TrialType<I>,\n    on_load?: () => void\n  ): void | Promise<TrialResult | void>;\n\n  simulate?(\n    trial: TrialType<I>,\n    simulation_mode: SimulationMode,\n    simulation_options: SimulationOptions,\n    on_load?: () => void\n  ): void | Promise<TrialResult | void>;\n}\n\nexport type TrialType<I extends PluginInfo> = InferredParameters<I[\"parameters\"]> &\n  TrialDescription;\n\nexport type PluginParameters<I extends PluginInfo> = InferredParameters<I[\"parameters\"]>;\n","import { ParameterType } from \"../../modules/plugins\";\nimport { unique } from \"../utils\";\nimport { AudioPlayer } from \"./AudioPlayer\";\n\nconst preloadParameterTypes = <const>[\n  ParameterType.AUDIO,\n  ParameterType.IMAGE,\n  ParameterType.VIDEO,\n];\ntype PreloadType = typeof preloadParameterTypes[number];\n\nexport class MediaAPI {\n  constructor(public useWebaudio: boolean) {\n    if (\n      this.useWebaudio &&\n      typeof window !== \"undefined\" &&\n      typeof window.AudioContext !== \"undefined\"\n    ) {\n      this.context = new AudioContext();\n    }\n  }\n\n  // video //\n  private video_buffers = {};\n  getVideoBuffer(videoID: string) {\n    if (videoID.startsWith(\"blob:\")) {\n      this.video_buffers[videoID] = videoID;\n    }\n    return this.video_buffers[videoID];\n  }\n\n  // audio //\n  private context: AudioContext = null;\n  private audio_buffers = [];\n\n  audioContext(): AudioContext {\n    if (this.context && this.context.state !== \"running\") {\n      this.context.resume();\n    }\n    return this.context;\n  }\n\n  async getAudioPlayer(audioID: string): Promise<AudioPlayer> {\n    if (this.audio_buffers[audioID] instanceof AudioPlayer) {\n      return this.audio_buffers[audioID];\n    } else {\n      this.audio_buffers[audioID] = new AudioPlayer(audioID, {\n        useWebAudio: this.useWebaudio,\n        audioContext: this.context,\n      });\n      await this.audio_buffers[audioID].load();\n      return this.audio_buffers[audioID];\n    }\n  }\n\n  // preloading stimuli //\n  private preload_requests = [];\n\n  private img_cache = {};\n\n  preloadAudio(\n    files,\n    callback_complete = () => {},\n    callback_load = (filepath: string) => {},\n    callback_error = (error) => {}\n  ) {\n    files = unique(files.flat());\n\n    let n_loaded = 0;\n\n    if (files.length == 0) {\n      callback_complete();\n      return;\n    }\n\n    for (const file of files) {\n      // check if file was already loaded\n      if (this.audio_buffers[file] instanceof AudioPlayer) {\n        n_loaded++;\n        callback_load(file);\n        if (n_loaded == files.length) {\n          callback_complete();\n        }\n      } else {\n        this.audio_buffers[file] = new AudioPlayer(file, {\n          useWebAudio: this.useWebaudio,\n          audioContext: this.context,\n        });\n        this.audio_buffers[file]\n          .load()\n          .then(() => {\n            n_loaded++;\n            callback_load(file);\n            if (n_loaded == files.length) {\n              callback_complete();\n            }\n          })\n          .catch((e) => {\n            callback_error(e);\n          });\n      }\n    }\n  }\n\n  preloadImages(\n    images,\n    callback_complete = () => {},\n    callback_load = (filepath) => {},\n    callback_error = (error_msg) => {}\n  ) {\n    // flatten the images array\n    images = unique(images.flat());\n\n    var n_loaded = 0;\n\n    if (images.length === 0) {\n      callback_complete();\n      return;\n    }\n\n    for (let i = 0; i < images.length; i++) {\n      const img = new Image();\n      const src = images[i];\n      img.onload = () => {\n        n_loaded++;\n        callback_load(src);\n        if (n_loaded === images.length) {\n          callback_complete();\n        }\n      };\n\n      img.onerror = (e) => {\n        callback_error({ source: src, error: e });\n      };\n\n      img.src = src;\n\n      this.img_cache[src] = img;\n      this.preload_requests.push(img);\n    }\n  }\n\n  preloadVideo(\n    videos,\n    callback_complete = () => {},\n    callback_load = (filepath) => {},\n    callback_error = (error_msg) => {}\n  ) {\n    // flatten the video array\n    videos = unique(videos.flat());\n\n    let n_loaded = 0;\n\n    if (videos.length === 0) {\n      callback_complete();\n      return;\n    }\n\n    for (const video of videos) {\n      const video_buffers = this.video_buffers;\n\n      //based on option 4 here: http://dinbror.dk/blog/how-to-preload-entire-html5-video-before-play-solved/\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", video, true);\n      request.responseType = \"blob\";\n      request.onload = () => {\n        if (request.status === 200 || request.status === 0) {\n          const videoBlob = request.response;\n          video_buffers[video] = URL.createObjectURL(videoBlob); // IE10+\n          n_loaded++;\n          callback_load(video);\n          if (n_loaded === videos.length) {\n            callback_complete();\n          }\n        }\n      };\n      request.onerror = (e) => {\n        let err: ProgressEvent | string = e;\n        if (request.status == 404) {\n          err = \"404\";\n        }\n        callback_error({ source: video, error: err });\n      };\n      request.onloadend = (e) => {\n        if (request.status == 404) {\n          callback_error({ source: video, error: \"404\" });\n        }\n      };\n      request.send();\n      this.preload_requests.push(request);\n    }\n  }\n\n  private preloadMap = new Map<string, Record<string, PreloadType>>();\n\n  getAutoPreloadList(timeline_description: any[]) {\n    /** Map each preload parameter type to a set of paths to be preloaded */\n    const preloadPaths = Object.fromEntries(\n      preloadParameterTypes.map((type) => [type, new Set<string>()])\n    );\n\n    const traverseTimeline = (node, inheritedTrialType?) => {\n      const isTimeline = typeof node.timeline !== \"undefined\";\n\n      if (isTimeline) {\n        for (const childNode of node.timeline) {\n          traverseTimeline(childNode, node.type ?? inheritedTrialType);\n        }\n      } else if ((node.type ?? inheritedTrialType)?.info) {\n        // node is a trial with type.info set\n\n        // Get the plugin name and parameters object from the info object\n        const { name: pluginName, parameters } = (node.type ?? inheritedTrialType).info;\n\n        // Extract parameters to be preloaded and their types from parameter info if this has not\n        // yet been done for `pluginName`\n        if (!this.preloadMap.has(pluginName)) {\n          this.preloadMap.set(\n            pluginName,\n            Object.fromEntries(\n              Object.entries<any>(parameters)\n                // Filter out parameter entries with media types and a non-false `preload` option\n                .filter(\n                  ([_name, { type, preload }]) =>\n                    preloadParameterTypes.includes(type) && (preload ?? true)\n                )\n                // Map each entry's value to its parameter type\n                .map(([name, { type }]) => [name, type])\n            )\n          );\n        }\n\n        // Add preload paths from this trial\n        for (const [parameterName, parameterType] of Object.entries(\n          this.preloadMap.get(pluginName)\n        )) {\n          const parameterValue = node[parameterName];\n          const elements = preloadPaths[parameterType];\n\n          if (typeof parameterValue === \"string\") {\n            elements.add(parameterValue);\n          } else if (Array.isArray(parameterValue)) {\n            for (const element of parameterValue.flat()) {\n              if (typeof element === \"string\") {\n                elements.add(element);\n              }\n            }\n          }\n        }\n      }\n    };\n\n    traverseTimeline({ timeline: timeline_description });\n\n    return {\n      images: [...preloadPaths[ParameterType.IMAGE]],\n      audio: [...preloadPaths[ParameterType.AUDIO]],\n      video: [...preloadPaths[ParameterType.VIDEO]],\n    };\n  }\n\n  cancelPreloads() {\n    for (const request of this.preload_requests) {\n      request.onload = () => {};\n      request.onerror = () => {};\n      request.oncanplaythrough = () => {};\n      request.onabort = () => {};\n    }\n    this.preload_requests = [];\n  }\n\n  private microphone_recorder: MediaRecorder = null;\n\n  initializeMicrophoneRecorder(stream: MediaStream) {\n    const recorder = new MediaRecorder(stream);\n    this.microphone_recorder = recorder;\n  }\n\n  getMicrophoneRecorder(): MediaRecorder {\n    return this.microphone_recorder;\n  }\n\n  private camera_stream: MediaStream = null;\n  private camera_recorder: MediaRecorder = null;\n\n  initializeCameraRecorder(stream: MediaStream, opts?: MediaRecorderOptions) {\n    this.camera_stream = stream;\n    const recorder = new MediaRecorder(stream, opts);\n    this.camera_recorder = recorder;\n  }\n\n  getCameraStream(): MediaStream {\n    return this.camera_stream;\n  }\n\n  getCameraRecorder(): MediaRecorder {\n    return this.camera_recorder;\n  }\n}\n","export class MigrationError extends Error {\n  constructor(message = \"The global `jsPsych` variable is no longer available in jsPsych v7.\") {\n    super(\n      `${message} Please follow the migration guide at https://www.jspsych.org/7.0/support/migration-v7/ to update your experiment.`\n    );\n    this.name = \"MigrationError\";\n  }\n}\n\n// Define a global jsPsych object to handle invocations on it with migration errors\n(window as any).jsPsych = {\n  get init() {\n    throw new MigrationError(\"`jsPsych.init()` was replaced by `initJsPsych()` in jsPsych v7.\");\n  },\n\n  get data() {\n    throw new MigrationError();\n  },\n  get randomization() {\n    throw new MigrationError();\n  },\n  get turk() {\n    throw new MigrationError();\n  },\n  get pluginAPI() {\n    throw new MigrationError();\n  },\n\n  get ALL_KEYS() {\n    throw new MigrationError(\n      'jsPsych.ALL_KEYS was replaced by the \"ALL_KEYS\" string in jsPsych v7.'\n    );\n  },\n  get NO_KEYS() {\n    throw new MigrationError('jsPsych.NO_KEYS was replaced by the \"NO_KEYS\" string in jsPsych v7.');\n  },\n};\n","// __rollup-babel-import-regenerator-runtime__\n\nimport { JsPsych } from \"./JsPsych\";\nimport { MigrationError } from \"./migration\";\n\n// temporary patch for Safari\nif (\n  typeof window !== \"undefined\" &&\n  window.hasOwnProperty(\"webkitAudioContext\") &&\n  !window.hasOwnProperty(\"AudioContext\")\n) {\n  // @ts-expect-error\n  window.AudioContext = webkitAudioContext;\n}\n// end patch\n\n// The following function provides a uniform interface to initialize jsPsych, no matter whether a\n// browser supports ES6 classes or not (and whether the ES6 build or the Babel build is used).\n/**\n * Creates a new JsPsych instance using the provided options.\n *\n * @param options The options to pass to the JsPsych constructor\n * @returns A new JsPsych instance\n */\nexport function initJsPsych(options?) {\n  const jsPsych = new JsPsych(options);\n\n  // Handle invocations of non-existent v6 methods with migration errors\n  const migrationMessages = {\n    init: \"`jsPsych.init()` was replaced by `initJsPsych()` in jsPsych v7.\",\n\n    ALL_KEYS: 'jsPsych.ALL_KEYS was replaced by the \"ALL_KEYS\" string in jsPsych v7.',\n    NO_KEYS: 'jsPsych.NO_KEYS was replaced by the \"NO_KEYS\" string in jsPsych v7.',\n\n    // Getter functions that were renamed\n    currentTimelineNodeID:\n      \"`currentTimelineNodeID()` was renamed to `getCurrentTimelineNodeID()` in jsPsych v7.\",\n    progress: \"`progress()` was renamed to `getProgress()` in jsPsych v7.\",\n    startTime: \"`startTime()` was renamed to `getStartTime()` in jsPsych v7.\",\n    totalTime: \"`totalTime()` was renamed to `getTotalTime()` in jsPsych v7.\",\n    currentTrial: \"`currentTrial()` was renamed to `getCurrentTrial()` in jsPsych v7.\",\n    initSettings: \"`initSettings()` was renamed to `getInitSettings()` in jsPsych v7.\",\n    allTimelineVariables:\n      \"`allTimelineVariables()` was renamed to `getAllTimelineVariables()` in jsPsych v7.\",\n  };\n\n  Object.defineProperties(\n    jsPsych,\n    Object.fromEntries(\n      Object.entries(migrationMessages).map(([key, message]) => [\n        key,\n        {\n          get() {\n            throw new MigrationError(message);\n          },\n        },\n      ])\n    )\n  );\n\n  return jsPsych;\n}\n\nexport { JsPsych } from \"./JsPsych\";\nexport type { JsPsychPlugin, PluginInfo, TrialType } from \"./modules/plugins\";\nexport { ParameterType } from \"./modules/plugins\";\nexport type { JsPsychExtension, JsPsychExtensionInfo } from \"./modules/extensions\";\nexport { DataCollection } from \"./modules/data/DataCollection\";\n","{\n  \"name\": \"@jspsych/plugin-html-button-response\",\n  \"version\": \"2.1.0\",\n  \"description\": \"jsPsych plugin for displaying a stimulus and getting a button response\",\n  \"type\": \"module\",\n  \"main\": \"dist/index.cjs\",\n  \"exports\": {\n    \"import\": \"./dist/index.js\",\n    \"require\": \"./dist/index.cjs\"\n  },\n  \"typings\": \"dist/index.d.ts\",\n  \"unpkg\": \"dist/index.browser.min.js\",\n  \"files\": [\n    \"src\",\n    \"dist\"\n  ],\n  \"source\": \"src/index.ts\",\n  \"scripts\": {\n    \"test\": \"jest\",\n    \"test:watch\": \"npm test -- --watch\",\n    \"tsc\": \"tsc\",\n    \"build\": \"rollup --config\",\n    \"build:watch\": \"npm run build -- --watch\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/jspsych/jsPsych.git\",\n    \"directory\": \"packages/plugin-html-button-response\"\n  },\n  \"author\": \"Josh de Leeuw\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/jspsych/jsPsych/issues\"\n  },\n  \"homepage\": \"https://www.jspsych.org/latest/plugins/html-button-response\",\n  \"peerDependencies\": {\n    \"jspsych\": \">=7.1.0\"\n  },\n  \"devDependencies\": {\n    \"@jspsych/config\": \"^3.2.0\",\n    \"@jspsych/test-utils\": \"^1.2.0\"\n  }\n}\n","import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nimport { version } from \"../package.json\";\n\nconst info = <const>{\n  name: \"html-button-response\",\n  version: version,\n  parameters: {\n    /** The HTML content to be displayed. */\n    stimulus: {\n      type: ParameterType.HTML_STRING,\n      default: undefined,\n    },\n    /** Labels for the buttons. Each different string in the array will generate a different button. */\n    choices: {\n      type: ParameterType.STRING,\n      default: undefined,\n      array: true,\n    },\n    /**\n     * A function that generates the HTML for each button in the `choices` array. The function gets the string and index of the item in the `choices` array and should return valid HTML. If you want to use different markup for each button, you can do that by using a conditional on either parameter. The default parameter returns a button element with the text label of the choice.\n     */\n    button_html: {\n      type: ParameterType.FUNCTION,\n      default: function (choice: string, choice_index: number) {\n        return `<button class=\"jspsych-btn\">${choice}</button>`;\n      },\n    },\n    /** This string can contain HTML markup. Any content here will be displayed below the stimulus. The intention is that it can be used to provide a reminder about the action the participant is supposed to take (e.g., which key to press). */\n    prompt: {\n      type: ParameterType.HTML_STRING,\n      default: null,\n    },\n    /** How long to display the stimulus in milliseconds. The visibility CSS property of the stimulus will be set to `hidden` after this time has elapsed. If this is null, then the stimulus will remain visible until the trial ends. */\n    stimulus_duration: {\n      type: ParameterType.INT,\n      default: null,\n    },\n    /** ow long to wait for the participant to make a response before ending the trial in milliseconds. If the participant fails to make a response before this timer is reached, the participant's response will be recorded as null for the trial and the trial will end. If the value of this parameter is null, the trial will wait for a response indefinitely.  */\n    trial_duration: {\n      type: ParameterType.INT,\n      default: null,\n    },\n    /** Setting to `'grid'` will make the container element have the CSS property `display: grid` and enable the use of `grid_rows` and `grid_columns`. Setting to `'flex'` will make the container element have the CSS property `display: flex`. You can customize how the buttons are laid out by adding inline CSS in the `button_html` parameter. */\n    button_layout: {\n      type: ParameterType.STRING,\n      default: \"grid\",\n    },\n    /**\n     * The number of rows in the button grid. Only applicable when `button_layout` is set to `'grid'`. If null, the number of rows will be determined automatically based on the number of buttons and the number of columns.\n     */\n    grid_rows: {\n      type: ParameterType.INT,\n      default: 1,\n    },\n    /**\n     * The number of columns in the button grid. Only applicable when `button_layout` is set to `'grid'`. If null, the number of columns will be determined automatically based on the number of buttons and the number of rows.\n     */\n    grid_columns: {\n      type: ParameterType.INT,\n      default: null,\n    },\n    /** If true, then the trial will end whenever the participant makes a response (assuming they make their response before the cutoff specified by the `trial_duration` parameter). If false, then the trial will continue until the value for `trial_duration` is reached. You can set this parameter to `false` to force the participant to view a stimulus for a fixed amount of time, even if they respond before the time is complete. */\n    response_ends_trial: {\n      type: ParameterType.BOOL,\n      default: true,\n    },\n    /** How long the button will delay enabling in milliseconds. */\n    enable_button_after: {\n      type: ParameterType.INT,\n      default: 0,\n    },\n  },\n  data: {\n    /** The response time in milliseconds for the participant to make a response. The time is measured from when the stimulus first appears on the screen until the participant's response. */\n    rt: {\n      type: ParameterType.INT,\n    },\n    /** Indicates which button the participant pressed. The first button in the `choices` array is 0, the second is 1, and so on. */\n    response: {\n      type: ParameterType.INT,\n    },\n    /** The HTML content that was displayed on the screen. */\n    stimulus: {\n      type: ParameterType.HTML_STRING,\n    },\n  },\n  // prettier-ignore\n  citations: '__CITATIONS__',\n};\n\ntype Info = typeof info;\n\n/**\n * This plugin displays HTML content and records responses generated by button click. The stimulus can be displayed until a response is given, or for a pre-determined amount of time. The trial can be ended automatically if the participant has failed to respond within a fixed length of time. The button itself can be customized using HTML formatting.\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/latest/plugins/html-button-response/ html-button-response plugin documentation on jspsych.org}\n */\nclass HtmlButtonResponsePlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    // Display stimulus\n    const stimulusElement = document.createElement(\"div\");\n    stimulusElement.id = \"jspsych-html-button-response-stimulus\";\n    stimulusElement.innerHTML = trial.stimulus;\n\n    display_element.appendChild(stimulusElement);\n\n    // Display buttons\n    const buttonGroupElement = document.createElement(\"div\");\n    buttonGroupElement.id = \"jspsych-html-button-response-btngroup\";\n    if (trial.button_layout === \"grid\") {\n      buttonGroupElement.classList.add(\"jspsych-btn-group-grid\");\n      if (trial.grid_rows === null && trial.grid_columns === null) {\n        throw new Error(\n          \"You cannot set `grid_rows` to `null` without providing a value for `grid_columns`.\"\n        );\n      }\n      const n_cols =\n        trial.grid_columns === null\n          ? Math.ceil(trial.choices.length / trial.grid_rows)\n          : trial.grid_columns;\n      const n_rows =\n        trial.grid_rows === null\n          ? Math.ceil(trial.choices.length / trial.grid_columns)\n          : trial.grid_rows;\n      buttonGroupElement.style.gridTemplateColumns = `repeat(${n_cols}, 1fr)`;\n      buttonGroupElement.style.gridTemplateRows = `repeat(${n_rows}, 1fr)`;\n    } else if (trial.button_layout === \"flex\") {\n      buttonGroupElement.classList.add(\"jspsych-btn-group-flex\");\n    }\n\n    for (const [choiceIndex, choice] of trial.choices.entries()) {\n      buttonGroupElement.insertAdjacentHTML(\"beforeend\", trial.button_html(choice, choiceIndex));\n      const buttonElement = buttonGroupElement.lastChild as HTMLElement;\n      buttonElement.dataset.choice = choiceIndex.toString();\n      buttonElement.addEventListener(\"click\", () => {\n        after_response(choiceIndex);\n      });\n    }\n\n    display_element.appendChild(buttonGroupElement);\n\n    // Show prompt if there is one\n    if (trial.prompt !== null) {\n      display_element.insertAdjacentHTML(\"beforeend\", trial.prompt);\n    }\n\n    // start time\n    var start_time = performance.now();\n\n    // store response\n    var response = {\n      rt: null,\n      button: null,\n    };\n\n    // function to end trial when it is time\n    const end_trial = () => {\n      // gather the data to store for the trial\n      var trial_data = {\n        rt: response.rt,\n        stimulus: trial.stimulus,\n        response: response.button,\n      };\n\n      // move on to the next trial\n      this.jsPsych.finishTrial(trial_data);\n    };\n\n    // function to handle responses by the subject\n    function after_response(choice) {\n      // measure rt\n      var end_time = performance.now();\n      var rt = Math.round(end_time - start_time);\n      response.button = parseInt(choice);\n      response.rt = rt;\n\n      // after a valid response, the stimulus will have the CSS class 'responded'\n      // which can be used to provide visual feedback that a response was recorded\n      stimulusElement.classList.add(\"responded\");\n\n      // disable all the buttons after a response\n      for (const button of buttonGroupElement.children) {\n        button.setAttribute(\"disabled\", \"disabled\");\n      }\n\n      if (trial.response_ends_trial) {\n        end_trial();\n      }\n    }\n\n    // hide image if timing is set\n    if (trial.stimulus_duration !== null) {\n      this.jsPsych.pluginAPI.setTimeout(() => {\n        stimulusElement.style.visibility = \"hidden\";\n      }, trial.stimulus_duration);\n    }\n\n    // disable all the buttons and set a timeout that enables them after a specified delay if timing is set\n    if (trial.enable_button_after > 0) {\n      var btns = document.querySelectorAll(\"#jspsych-html-button-response-btngroup button\");\n      for (var i = 0; i < btns.length; i++) {\n        btns[i].setAttribute(\"disabled\", \"disabled\");\n      }\n      this.jsPsych.pluginAPI.setTimeout(() => {\n        var btns = document.querySelectorAll(\"#jspsych-html-button-response-btngroup button\");\n        for (var i = 0; i < btns.length; i++) {\n          btns[i].removeAttribute(\"disabled\");\n        }\n      }, trial.enable_button_after);\n    }\n\n    // end trial if time limit is set\n    if (trial.trial_duration !== null) {\n      this.jsPsych.pluginAPI.setTimeout(end_trial, trial.trial_duration);\n    }\n  }\n\n  simulate(\n    trial: TrialType<Info>,\n    simulation_mode,\n    simulation_options: any,\n    load_callback: () => void\n  ) {\n    if (simulation_mode == \"data-only\") {\n      load_callback();\n      this.simulate_data_only(trial, simulation_options);\n    }\n    if (simulation_mode == \"visual\") {\n      this.simulate_visual(trial, simulation_options, load_callback);\n    }\n  }\n\n  private create_simulation_data(trial: TrialType<Info>, simulation_options) {\n    const default_data = {\n      stimulus: trial.stimulus,\n      rt:\n        this.jsPsych.randomization.sampleExGaussian(500, 50, 1 / 150, true) +\n        trial.enable_button_after,\n      response: this.jsPsych.randomization.randomInt(0, trial.choices.length - 1),\n    };\n\n    const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n\n    this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n\n    return data;\n  }\n\n  private simulate_data_only(trial: TrialType<Info>, simulation_options) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    this.jsPsych.finishTrial(data);\n  }\n\n  private simulate_visual(trial: TrialType<Info>, simulation_options, load_callback: () => void) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    const display_element = this.jsPsych.getDisplayElement();\n\n    this.trial(display_element, trial);\n    load_callback();\n\n    if (data.rt !== null) {\n      this.jsPsych.pluginAPI.clickTarget(\n        display_element.querySelector(\n          `#jspsych-html-button-response-btngroup [data-choice=\"${data.response}\"]`\n        ),\n        data.rt\n      );\n    }\n  }\n}\n\nexport default HtmlButtonResponsePlugin;\n","{\n  \"name\": \"@jspsych/plugin-instructions\",\n  \"version\": \"2.1.0\",\n  \"description\": \"jsPsych plugin to display instructions\",\n  \"type\": \"module\",\n  \"main\": \"dist/index.cjs\",\n  \"exports\": {\n    \"import\": \"./dist/index.js\",\n    \"require\": \"./dist/index.cjs\"\n  },\n  \"typings\": \"dist/index.d.ts\",\n  \"unpkg\": \"dist/index.browser.min.js\",\n  \"files\": [\n    \"src\",\n    \"dist\"\n  ],\n  \"source\": \"src/index.ts\",\n  \"scripts\": {\n    \"test\": \"jest\",\n    \"test:watch\": \"npm test -- --watch\",\n    \"tsc\": \"tsc\",\n    \"build\": \"rollup --config\",\n    \"build:watch\": \"npm run build -- --watch\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/jspsych/jsPsych.git\",\n    \"directory\": \"packages/plugin-instructions\"\n  },\n  \"author\": \"Josh de Leeuw\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/jspsych/jsPsych/issues\"\n  },\n  \"homepage\": \"https://www.jspsych.org/latest/plugins/instructions\",\n  \"peerDependencies\": {\n    \"jspsych\": \">=7.1.0\"\n  },\n  \"devDependencies\": {\n    \"@jspsych/config\": \"^3.2.0\",\n    \"@jspsych/test-utils\": \"^1.2.0\"\n  }\n}\n","import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\nimport { parameterPathArrayToString } from \"jspsych/src/timeline/util\";\n\nimport { version } from \"../package.json\";\n\nconst info = <const>{\n  name: \"instructions\",\n  version: version,\n  parameters: {\n    /** Each element of the array is the content for a single page. Each page should be an HTML-formatted string.  */\n    pages: {\n      type: ParameterType.HTML_STRING,\n      default: undefined,\n      array: true,\n    },\n    /** This is the key that the participant can press in order to advance to the next page. This key should be\n     * specified as a string (e.g., `'a'`, `'ArrowLeft'`, `' '`, `'Enter'`). */\n    key_forward: {\n      type: ParameterType.KEY,\n      default: \"ArrowRight\",\n    },\n    /** This is the key that the participant can press to return to the previous page. This key should be specified as a\n     * string (e.g., `'a'`, `'ArrowLeft'`, `' '`, `'Enter'`). */\n    key_backward: {\n      type: ParameterType.KEY,\n      default: \"ArrowLeft\",\n    },\n    /** If true, the participant can return to previous pages of the instructions. If false, they may only advace to the next page. */\n    allow_backward: {\n      type: ParameterType.BOOL,\n      default: true,\n    },\n    /** If `true`, the participant can use keyboard keys to navigate the pages. If `false`, they may not. */\n    allow_keys: {\n      type: ParameterType.BOOL,\n      default: true,\n    },\n    /** If true, then a `Previous` and `Next` button will be displayed beneath the instructions. Participants can\n     * click the buttons to navigate. */\n    show_clickable_nav: {\n      type: ParameterType.BOOL,\n      default: false,\n    },\n    /** If true, and clickable navigation is enabled, then Page x/y will be shown between the nav buttons. */\n    show_page_number: {\n      type: ParameterType.BOOL,\n      default: false,\n    },\n    /** The text that appears before x/y pages displayed when show_page_number is true.*/\n    page_label: {\n      type: ParameterType.STRING,\n      default: \"Page\",\n    },\n    /** The text that appears on the button to go backwards. */\n    button_label_previous: {\n      type: ParameterType.STRING,\n      default: \"Previous\",\n    },\n    /** The text that appears on the button to go forwards. */\n    button_label_next: {\n      type: ParameterType.STRING,\n      default: \"Next\",\n    },\n    /** The callback function when page changes */\n    on_page_change: {\n      type: ParameterType.FUNCTION,\n      pretty_name: \"Page change callback\",\n      default: function (current_page: number) {},\n    },\n  },\n  data: {\n    /** An array containing the order of pages the participant viewed (including when the participant returned to previous pages)\n     *  and the time spent viewing each page. Each object in the array represents a single page view,\n     * and contains keys called `page_index` (the page number, starting with 0) and `viewing_time`\n     * (duration of the page view). This will be encoded as a JSON string when data is saved using the `.json()` or `.csv()`\n     * functions.\n     */\n    view_history: {\n      type: ParameterType.COMPLEX,\n      array: true,\n      nested: {\n        page_index: {\n          type: ParameterType.INT,\n        },\n        viewing_time: {\n          type: ParameterType.INT,\n        },\n      },\n    },\n    /** The response time in milliseconds for the participant to view all of the pages. */\n    rt: {\n      type: ParameterType.INT,\n    },\n  },\n  // prettier-ignore\n  citations: '__CITATIONS__',\n};\n\ntype Info = typeof info;\n\n/**\n * This plugin is for showing instructions to the participant. It allows participants to navigate through multiple pages\n * of instructions at their own pace, recording how long the participant spends on each page. Navigation can be done using\n *  the mouse or keyboard. participants can be allowed to navigate forwards and backwards through pages, if desired.\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/latest/plugins/instructions/ instructions plugin documentation on jspsych.org}\n */\nclass InstructionsPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    var current_page = 0;\n\n    var view_history = [];\n\n    var start_time = performance.now();\n\n    var last_page_update_time = start_time;\n\n    function btnListener() {\n      if (this.id === \"jspsych-instructions-back\") {\n        back();\n      } else if (this.id === \"jspsych-instructions-next\") {\n        next();\n      }\n    }\n\n    function show_current_page() {\n      var html = trial.pages[current_page];\n\n      var pagenum_display = \"\";\n      if (trial.show_page_number) {\n        pagenum_display =\n          \"<span style='margin: 0 1em;' class='\" +\n          \"jspsych-instructions-pagenum'>\" +\n          trial.page_label +\n          \" \" +\n          (current_page + 1) +\n          \"/\" +\n          trial.pages.length +\n          \"</span>\";\n      }\n\n      if (trial.show_clickable_nav) {\n        var nav_html = \"<div class='jspsych-instructions-nav' style='padding: 10px 0px;'>\";\n        if (trial.allow_backward) {\n          var allowed = current_page > 0 ? \"\" : \"disabled='disabled'\";\n          nav_html +=\n            \"<button id='jspsych-instructions-back' class='jspsych-btn' style='margin-right: 5px;' \" +\n            allowed +\n            \">&lt; \" +\n            trial.button_label_previous +\n            \"</button>\";\n        }\n        if (trial.pages.length > 1 && trial.show_page_number) {\n          nav_html += pagenum_display;\n        }\n        nav_html +=\n          \"<button id='jspsych-instructions-next' class='jspsych-btn'\" +\n          \"style='margin-left: 5px;'>\" +\n          trial.button_label_next +\n          \" &gt;</button></div>\";\n\n        html += nav_html;\n        display_element.innerHTML = html;\n        if (current_page != 0 && trial.allow_backward) {\n          display_element\n            .querySelector(\"#jspsych-instructions-back\")\n            .addEventListener(\"click\", btnListener, { once: true });\n        }\n\n        display_element\n          .querySelector(\"#jspsych-instructions-next\")\n          .addEventListener(\"click\", btnListener, { once: true });\n      } else {\n        if (trial.show_page_number && trial.pages.length > 1) {\n          // page numbers for non-mouse navigation\n          html += \"<div class='jspsych-instructions-pagenum'>\" + pagenum_display + \"</div>\";\n        }\n        display_element.innerHTML = html;\n      }\n    }\n\n    function next() {\n      add_current_page_to_view_history();\n\n      current_page++;\n\n      // if done, finish up...\n      if (current_page >= trial.pages.length) {\n        endTrial();\n      } else {\n        show_current_page();\n      }\n\n      trial.on_page_change(current_page);\n    }\n\n    function back() {\n      add_current_page_to_view_history();\n\n      current_page--;\n\n      show_current_page();\n\n      trial.on_page_change(current_page);\n    }\n\n    function add_current_page_to_view_history() {\n      var current_time = performance.now();\n\n      var page_view_time = Math.round(current_time - last_page_update_time);\n\n      view_history.push({\n        page_index: current_page,\n        viewing_time: page_view_time,\n      });\n\n      last_page_update_time = current_time;\n    }\n\n    const endTrial = () => {\n      if (trial.allow_keys) {\n        this.jsPsych.pluginAPI.cancelKeyboardResponse(keyboard_listener);\n      }\n\n      var trial_data = {\n        view_history: view_history,\n        rt: Math.round(performance.now() - start_time),\n      };\n\n      this.jsPsych.finishTrial(trial_data);\n    };\n\n    const after_response = (info) => {\n      // have to reinitialize this instead of letting it persist to prevent accidental skips of pages by holding down keys too long\n      keyboard_listener = this.jsPsych.pluginAPI.getKeyboardResponse({\n        callback_function: after_response,\n        valid_responses: [trial.key_forward, trial.key_backward],\n        rt_method: \"performance\",\n        persist: false,\n        allow_held_key: false,\n      });\n      // check if key is forwards or backwards and update page\n      if (this.jsPsych.pluginAPI.compareKeys(info.key, trial.key_backward)) {\n        if (current_page !== 0 && trial.allow_backward) {\n          back();\n        }\n      }\n\n      if (this.jsPsych.pluginAPI.compareKeys(info.key, trial.key_forward)) {\n        next();\n      }\n    };\n\n    show_current_page();\n\n    if (trial.allow_keys) {\n      var keyboard_listener = this.jsPsych.pluginAPI.getKeyboardResponse({\n        callback_function: after_response,\n        valid_responses: [trial.key_forward, trial.key_backward],\n        rt_method: \"performance\",\n        persist: false,\n      });\n    }\n  }\n\n  simulate(\n    trial: TrialType<Info>,\n    simulation_mode,\n    simulation_options: any,\n    load_callback: () => void\n  ) {\n    if (simulation_mode == \"data-only\") {\n      load_callback();\n      this.simulate_data_only(trial, simulation_options);\n    }\n    if (simulation_mode == \"visual\") {\n      this.simulate_visual(trial, simulation_options, load_callback);\n    }\n  }\n\n  private create_simulation_data(trial: TrialType<Info>, simulation_options) {\n    let curr_page = 0;\n    let rt = 0;\n    let view_history = [];\n\n    // if there is no view history and no RT, simulate a random walk through the pages\n    if (!simulation_options.data?.view_history && !simulation_options.data?.rt) {\n      while (curr_page !== trial.pages.length) {\n        const view_time = Math.round(\n          this.jsPsych.randomization.sampleExGaussian(3000, 300, 1 / 300)\n        );\n        view_history.push({ page_index: curr_page, viewing_time: view_time });\n        rt += view_time;\n        if (curr_page == 0 || !trial.allow_backward) {\n          curr_page++;\n        } else {\n          if (this.jsPsych.randomization.sampleBernoulli(0.9) == 1) {\n            curr_page++;\n          } else {\n            curr_page--;\n          }\n        }\n      }\n    }\n\n    // if there is an RT but no view history, simulate a random walk through the pages\n    // that ends on the final page when the RT is reached\n    if (!simulation_options.data?.view_history && simulation_options.data?.rt) {\n      rt = simulation_options.data.rt;\n      while (curr_page !== trial.pages.length) {\n        view_history.push({ page_index: curr_page, viewing_time: null });\n        if (curr_page == 0 || !trial.allow_backward) {\n          curr_page++;\n        } else {\n          if (this.jsPsych.randomization.sampleBernoulli(0.9) == 1) {\n            curr_page++;\n          } else {\n            curr_page--;\n          }\n        }\n      }\n      const avg_rt_per_page = simulation_options.data.rt / view_history.length;\n      let total_time = 0;\n      for (const page of view_history) {\n        const t = Math.round(\n          this.jsPsych.randomization.sampleExGaussian(\n            avg_rt_per_page,\n            avg_rt_per_page / 10,\n            1 / (avg_rt_per_page / 10)\n          )\n        );\n        page.viewing_time = t;\n        total_time += t;\n      }\n      const diff = simulation_options.data.rt - total_time;\n      // remove equal diff from each page\n      const diff_per_page = Math.round(diff / view_history.length);\n      for (const page of view_history) {\n        page.viewing_time += diff_per_page;\n      }\n    }\n\n    // if there is a view history but no RT, make the RT equal the sum of the view history\n    if (simulation_options.data?.view_history && !simulation_options.data?.rt) {\n      view_history = simulation_options.data.view_history;\n      rt = 0;\n      for (const page of simulation_options.data.view_history) {\n        rt += page.viewing_time;\n      }\n    }\n\n    const default_data = {\n      view_history: view_history,\n      rt: rt,\n    };\n\n    const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n\n    this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n\n    return data;\n  }\n\n  private simulate_data_only(trial: TrialType<Info>, simulation_options) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    this.jsPsych.finishTrial(data);\n  }\n\n  private simulate_visual(trial: TrialType<Info>, simulation_options, load_callback: () => void) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    const display_element = this.jsPsych.getDisplayElement();\n\n    this.trial(display_element, trial);\n    load_callback();\n\n    const advance = (rt) => {\n      if (trial.allow_keys) {\n        this.jsPsych.pluginAPI.pressKey(trial.key_forward, rt);\n      } else if (trial.show_clickable_nav) {\n        this.jsPsych.pluginAPI.clickTarget(\n          display_element.querySelector(\"#jspsych-instructions-next\"),\n          rt\n        );\n      }\n    };\n\n    const backup = (rt) => {\n      if (trial.allow_keys) {\n        this.jsPsych.pluginAPI.pressKey(trial.key_backward, rt);\n      } else if (trial.show_clickable_nav) {\n        this.jsPsych.pluginAPI.clickTarget(\n          display_element.querySelector(\"#jspsych-instructions-back\"),\n          rt\n        );\n      }\n    };\n\n    let curr_page = 0;\n    let t = 0;\n    for (let i = 0; i < data.view_history.length; i++) {\n      if (i == data.view_history.length - 1) {\n        advance(t + data.view_history[i].viewing_time);\n      } else {\n        if (data.view_history[i + 1].page_index > curr_page) {\n          advance(t + data.view_history[i].viewing_time);\n        }\n        if (data.view_history[i + 1].page_index < curr_page) {\n          backup(t + data.view_history[i].viewing_time);\n        }\n        t += data.view_history[i].viewing_time;\n        curr_page = data.view_history[i + 1].page_index;\n      }\n    }\n  }\n}\n\nexport default InstructionsPlugin;\n","/* This file contains the animal SVGs used in the speeded matching task.\r\n * Researchers can modify these SVGs to change the visual stimuli used in the experiment.\r\n * Each SVG should be a complete SVG element as a string.\r\n * \r\n * To add new animal SVGs:\r\n * 1. Go to https://www.svgrepo.com/collection/animal-portrait-vectors/\r\n * 2. Select an animal SVG\r\n * 3. Click \"Edit SVG\" \r\n * 4. Copy the SVG code\r\n * 5. Add it to the array below\r\n * \r\n * Make sure all SVGs have similar dimensions for consistent display.\r\n */\r\n\r\nexport const test_items = [\r\n    // Cat SVG\r\n    `<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <circle cx=\"50\" cy=\"45\" r=\"25\" fill=\"#FFA500\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <circle cx=\"42\" cy=\"40\" r=\"3\" fill=\"#000\"/>\r\n        <circle cx=\"58\" cy=\"40\" r=\"3\" fill=\"#000\"/>\r\n        <polygon points=\"45,50 50,55 55,50\" fill=\"#000\"/>\r\n        <path d=\"M30 30 L35 25 L40 30\" stroke=\"#000\" stroke-width=\"2\" fill=\"none\"/>\r\n        <path d=\"M60 30 L65 25 L70 30\" stroke=\"#000\" stroke-width=\"2\" fill=\"none\"/>\r\n    </svg>`,\r\n    \r\n    // Dog SVG\r\n    `<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <ellipse cx=\"50\" cy=\"45\" rx=\"28\" ry=\"25\" fill=\"#8B4513\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <circle cx=\"42\" cy=\"40\" r=\"3\" fill=\"#000\"/>\r\n        <circle cx=\"58\" cy=\"40\" r=\"3\" fill=\"#000\"/>\r\n        <ellipse cx=\"50\" cy=\"55\" rx=\"8\" ry=\"5\" fill=\"#000\"/>\r\n        <ellipse cx=\"35\" cy=\"25\" rx=\"8\" ry=\"12\" fill=\"#8B4513\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <ellipse cx=\"65\" cy=\"25\" rx=\"8\" ry=\"12\" fill=\"#8B4513\" stroke=\"#000\" stroke-width=\"2\"/>\r\n    </svg>`,\r\n    \r\n    // Bird SVG\r\n    `<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <ellipse cx=\"50\" cy=\"45\" rx=\"22\" ry=\"20\" fill=\"#87CEEB\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <circle cx=\"45\" cy=\"40\" r=\"2\" fill=\"#000\"/>\r\n        <polygon points=\"35,45 25,50 35,55\" fill=\"#FFA500\" stroke=\"#000\" stroke-width=\"1\"/>\r\n        <path d=\"M30 30 Q20 25 15 35\" stroke=\"#000\" stroke-width=\"2\" fill=\"none\"/>\r\n        <path d=\"M70 35 Q80 30 85 40\" stroke=\"#000\" stroke-width=\"2\" fill=\"none\"/>\r\n    </svg>`,\r\n    \r\n    // Fish SVG\r\n    `<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <ellipse cx=\"50\" cy=\"45\" rx=\"25\" ry=\"15\" fill=\"#00CED1\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <circle cx=\"40\" cy=\"42\" r=\"2\" fill=\"#000\"/>\r\n        <polygon points=\"75,45 85,35 85,55\" fill=\"#00CED1\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <path d=\"M50 30 Q60 25 65 30\" stroke=\"#000\" stroke-width=\"1\" fill=\"none\"/>\r\n        <path d=\"M50 60 Q60 65 65 60\" stroke=\"#000\" stroke-width=\"1\" fill=\"none\"/>\r\n    </svg>`,\r\n    \r\n    // Rabbit SVG\r\n    `<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <ellipse cx=\"50\" cy=\"50\" rx=\"20\" ry=\"22\" fill=\"#F5F5DC\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <circle cx=\"45\" cy=\"45\" r=\"2\" fill=\"#000\"/>\r\n        <circle cx=\"55\" cy=\"45\" r=\"2\" fill=\"#000\"/>\r\n        <ellipse cx=\"50\" cy=\"52\" rx=\"3\" ry=\"2\" fill=\"#FFC0CB\"/>\r\n        <ellipse cx=\"42\" cy=\"25\" rx=\"5\" ry=\"15\" fill=\"#F5F5DC\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <ellipse cx=\"58\" cy=\"25\" rx=\"5\" ry=\"15\" fill=\"#F5F5DC\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <circle cx=\"30\" cy=\"65\" r=\"8\" fill=\"#F5F5DC\" stroke=\"#000\" stroke-width=\"2\"/>\r\n    </svg>`,\r\n    \r\n    // Elephant SVG\r\n    `<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <ellipse cx=\"55\" cy=\"45\" rx=\"25\" ry=\"20\" fill=\"#C0C0C0\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <circle cx=\"50\" cy=\"40\" r=\"2\" fill=\"#000\"/>\r\n        <circle cx=\"60\" cy=\"40\" r=\"2\" fill=\"#000\"/>\r\n        <path d=\"M35 55 Q25 60 20 70 Q25 75 35 70\" stroke=\"#000\" stroke-width=\"2\" fill=\"#C0C0C0\"/>\r\n        <ellipse cx=\"45\" cy=\"25\" rx=\"8\" ry=\"6\" fill=\"#C0C0C0\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <ellipse cx=\"65\" cy=\"25\" rx=\"8\" ry=\"6\" fill=\"#C0C0C0\" stroke=\"#000\" stroke-width=\"2\"/>\r\n    </svg>`,\r\n    \r\n    // Lion SVG\r\n    `<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <circle cx=\"50\" cy=\"45\" r=\"25\" fill=\"#DAA520\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <circle cx=\"50\" cy=\"45\" r=\"18\" fill=\"#F4A460\" stroke=\"#000\" stroke-width=\"1\"/>\r\n        <circle cx=\"45\" cy=\"40\" r=\"2\" fill=\"#000\"/>\r\n        <circle cx=\"55\" cy=\"40\" r=\"2\" fill=\"#000\"/>\r\n        <ellipse cx=\"50\" cy=\"50\" rx=\"4\" ry=\"3\" fill=\"#000\"/>\r\n        <path d=\"M45 55 Q50 60 55 55\" stroke=\"#000\" stroke-width=\"2\" fill=\"none\"/>\r\n    </svg>`,\r\n    \r\n    // Bear SVG\r\n    `<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <ellipse cx=\"50\" cy=\"45\" rx=\"22\" ry=\"20\" fill=\"#8B4513\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <circle cx=\"35\" cy=\"30\" r=\"8\" fill=\"#8B4513\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <circle cx=\"65\" cy=\"30\" r=\"8\" fill=\"#8B4513\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <circle cx=\"45\" cy=\"42\" r=\"2\" fill=\"#000\"/>\r\n        <circle cx=\"55\" cy=\"42\" r=\"2\" fill=\"#000\"/>\r\n        <ellipse cx=\"50\" cy=\"50\" rx=\"5\" ry=\"4\" fill=\"#000\"/>\r\n    </svg>`,\r\n    \r\n    // Frog SVG\r\n    `<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <ellipse cx=\"50\" cy=\"50\" rx=\"25\" ry=\"20\" fill=\"#228B22\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <circle cx=\"42\" cy=\"35\" r=\"6\" fill=\"#228B22\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <circle cx=\"58\" cy=\"35\" r=\"6\" fill=\"#228B22\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <circle cx=\"42\" cy=\"35\" r=\"3\" fill=\"#000\"/>\r\n        <circle cx=\"58\" cy=\"35\" r=\"3\" fill=\"#000\"/>\r\n        <path d=\"M40 55 Q50 60 60 55\" stroke=\"#000\" stroke-width=\"2\" fill=\"none\"/>\r\n    </svg>`,\r\n    \r\n    // Butterfly SVG\r\n    `<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <line x1=\"50\" y1=\"20\" x2=\"50\" y2=\"65\" stroke=\"#000\" stroke-width=\"3\"/>\r\n        <ellipse cx=\"35\" cy=\"35\" rx=\"12\" ry=\"15\" fill=\"#FF69B4\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <ellipse cx=\"65\" cy=\"35\" rx=\"12\" ry=\"15\" fill=\"#FF69B4\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <ellipse cx=\"35\" cy=\"55\" rx=\"10\" ry=\"12\" fill=\"#FF1493\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <ellipse cx=\"65\" cy=\"55\" rx=\"10\" ry=\"12\" fill=\"#FF1493\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <circle cx=\"50\" cy=\"20\" r=\"3\" fill=\"#000\"/>\r\n        <path d=\"M47 18 L45 15\" stroke=\"#000\" stroke-width=\"2\"/>\r\n        <path d=\"M53 18 L55 15\" stroke=\"#000\" stroke-width=\"2\"/>\r\n    </svg>`\r\n];","/* This file contains the configurable text used in the speeded matching timeline.\r\n * Researchers can modify these texts to change the language or instructions.\r\n */\r\n\r\nexport const trial_text = {\r\n    // Button texts\r\n    continue_button: \"Continue\",\r\n    start_button: \"Start\",\r\n    ready_button: \"I'm Ready\",\r\n    end_button: \"End\",\r\n    // Instruction pages buttons text, these will always have arrows < and >\r\n    // these do not work right now due to CSS fixed position, might fix later\r\n    next_button: \"\",\r\n    back_button: \"\", \r\n    // Task completion messages\r\n    task_complete_header: \"Task Complete!\",\r\n    task_complete_message: \"Thank you for participating in the speeded matching task.\",\r\n    \r\n    // Practice phase text\r\n    practice_header: \"Practice Round\",\r\n    practice_intro_message: \"We'll now do a practice round to show you how the task works.\",\r\n    practice_look_instruction: \"Look at this picture\",\r\n    practice_tap_instruction: \"Tap the matching picture below\",\r\n    practice_complete_header: \"Are you ready?\",\r\n    practice_complete_message: \"Practice complete! Ready for the full test?\",\r\n    \r\n    // Main task instructions\r\n    main_task_prompt: \"Tap the matching picture below\",\r\n    \r\n    // Fixation and inter-trial\r\n    fixation_cross: \"+\",\r\n    \r\n    // Feedback messages (optional)\r\n    correct_feedback: \"Correct!\",\r\n    incorrect_feedback: \"Try again\",\r\n    \r\n    // Timing messages\r\n    too_slow_message: \"Please respond faster\",\r\n}\r\n\r\n/* \r\n * This is an array of HTML strings for instruction pages displayed before the actual trials.\r\n * Researchers can modify these instructions to change the task description, add new instruction \r\n * pages, or translate to different languages.\r\n * \r\n * Each string should contain valid HTML that will be displayed as an instruction page.\r\n * You can add more pages by adding more strings to the array, or modify existing pages\r\n * by editing the HTML content.\r\n */\r\n\r\nexport const instruction_pages = [\r\n    \"<b>You will see a picture at the top.</b>\",\r\n    \"Below it, you will see four pictures.\",\r\n    \"Click on the picture that matches the one at the top.\",\r\n    \"Work quickly but carefully.\",\r\n    \"Let's practice first.\"\r\n];","import { JsPsych, TrialType } from \"jspsych\"\r\nimport jsPsychHtmlButtonResponse from \"@jspsych/plugin-html-button-response\"\r\nimport jsPsychInstructions from \"@jspsych/plugin-instructions\"\r\nimport { test_items } from \"./test-items\"\r\nimport { trial_text, instruction_pages } from \"./text\"\r\n\r\ninterface SpeedMatchingConfig {\r\n  /** Array of test items (animal SVGs) to use as stimuli */\r\n  test_items?: string[]\r\n  /** Number of trials to generate */\r\n  num_trials?: number\r\n  /** Number of choice options per trial (default 4) */\r\n  num_choices?: number\r\n  /** Enable text-to-speech for instructions and prompts */\r\n  enable_tts?: boolean\r\n  /** Maximum time allowed per trial (in ms) */\r\n  trial_timeout?: number\r\n  /** Inter-trial interval (in ms) */\r\n  inter_trial_interval?: number\r\n  /** Show instruction pages before the task */\r\n  show_instructions?: boolean\r\n  /** Show practice round before main task */\r\n  show_practice?: boolean\r\n  /** Number of practice rounds to show (default 1) */\r\n  practice_rounds?: number\r\n  /** Custom instruction texts */\r\n  instruction_texts?: typeof instruction_pages\r\n}\r\n\r\n/**\r\n * Function to get a random selection of test items for creating choice sets\r\n * This ensures variety in the stimuli presented to participants\r\n */\r\nfunction getRandomTestItems(items: string[], count: number = 4): string[] {\r\n  const shuffled = [...items].sort(() => 0.5 - Math.random());\r\n  return shuffled.slice(0, Math.min(count, items.length));\r\n}\r\n\r\n/**\r\n * Function to create a trial set with one target and distractors\r\n * items: array of item strings (e.g., SVGs)\r\n * target_index: index of the item to use as target\r\n * num_choices: total number of choices to present (default 4)\r\n * Returns an object with target and choices array\r\n */\r\nfunction createTrialSet(items: string[], target_index: number = 0, num_choices: number = 4) {\r\n  if (target_index >= items.length) {\r\n    target_index = 0; // fallback to first item\r\n  }\r\n  \r\n  const target = items[target_index];\r\n  const others = items.filter((_, index) => index !== target_index);\r\n  const shuffled_others = others.sort(() => 0.5 - Math.random());\r\n  \r\n  // Create choices array with target and distractors\r\n  const choices = [target, ...shuffled_others.slice(0, num_choices - 1)];\r\n  const shuffled_choices = choices.sort(() => 0.5 - Math.random());\r\n  \r\n  // Find where the target ended up after shuffling\r\n  const correct_choice_index = shuffled_choices.findIndex(choice => choice === target);\r\n  \r\n  return {\r\n    target: target,\r\n    choices: shuffled_choices,\r\n    correct_answer: correct_choice_index,\r\n    target_index: target_index\r\n  };\r\n}\r\n\r\n/**\r\n * Function to provide text-to-speech functionality\r\n * Researchers can modify speech settings like rate and volume\r\n */\r\nfunction speakText(text: string) {\r\n  console.log('TTS Support:', 'speechSynthesis' in window);\r\n  console.log('Voices available:', speechSynthesis.getVoices().length);\r\n  console.log('Text to speak:', text);\r\n\r\n  if ('speechSynthesis' in window) {\r\n    // Stop any ongoing speech\r\n    if ('speechSynthesis' in window) {\r\n      speechSynthesis.cancel();\r\n    }\r\n    \r\n    // Wait a brief moment for cancel to take effect\r\n    setTimeout(() => {\r\n      // Create and speak the utterance\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      utterance.rate = 0.8; // Slightly slower for clarity\r\n      utterance.volume = 0.8;\r\n      utterance.voice = speechSynthesis.getVoices()[0] || null; // Use first available voice\r\n      speechSynthesis.speak(utterance);\r\n    }, 100);\r\n  }\r\n}\r\n\r\n/**\r\n * Creates instruction pages with configurable text and TTS support\r\n * Uses the jsPsych instructions plugin with simple HTML strings\r\n */\r\n// Helper function to extract text from HTML for TTS\r\nfunction extractTextFromHtml(htmlString: string): string {\r\n  // Use DOMParser for robust HTML to text extraction\r\n  const parser = new DOMParser();\r\n  const doc = parser.parseFromString(htmlString, 'text/html');\r\n  return doc.body.textContent?.replace(/\\s+/g, ' ').trim() || '';\r\n}\r\n\r\nfunction createInstructions(instruction_pages_data = instruction_pages, enable_tts = false) {\r\n  // Closure variable to store the handler for cleanup\r\n  let handleButtonClick: ((event: Event) => void) | null = null;\r\n\r\n  return {\r\n    type: jsPsychInstructions,\r\n    pages: instruction_pages_data.map(page => `<div class=\"instructions-container\"><p>${page}</p></div>`),\r\n    show_clickable_nav: true,\r\n    allow_keys: true,\r\n    key_forward: 'ArrowRight',\r\n    key_backward: 'ArrowLeft',\r\n    button_label_previous: trial_text.back_button,\r\n    button_label_next: trial_text.next_button,\r\n    on_start: function() {\r\n      speechSynthesis.cancel();\r\n    },\r\n    on_load: function() {\r\n      if (enable_tts) {\r\n        console.log('TTS enabled for instructions');\r\n        // Function to speak current page content\r\n        const speakCurrentPage = () => {\r\n          const instructionsContent = document.querySelector('.instructions-container');\r\n          if (instructionsContent) {\r\n            const pageText = extractTextFromHtml(instructionsContent.innerHTML);\r\n            if (pageText.trim()) {\r\n              speakText(pageText);\r\n            }\r\n          }\r\n        };\r\n\r\n        // Use closure variable for handler\r\n        handleButtonClick = (event: Event) => {\r\n          const target = event.target as HTMLElement;\r\n          if (target && (target.id === 'jspsych-instructions-next' || target.id === 'jspsych-instructions-back')) {\r\n            speechSynthesis.cancel();\r\n            setTimeout(speakCurrentPage, 200);\r\n          }\r\n        };\r\n\r\n        // Add single event listener to document\r\n        document.addEventListener('click', handleButtonClick);\r\n\r\n        // Speak initial page\r\n        setTimeout(speakCurrentPage, 300);\r\n      }\r\n    },\r\n    on_finish: function(data: any) {\r\n      speechSynthesis.cancel();\r\n      // Clean up event listener using closure variable\r\n      if (handleButtonClick) {\r\n        document.removeEventListener('click', handleButtonClick);\r\n        handleButtonClick = null;\r\n      }\r\n      if (enable_tts) {\r\n        speechSynthesis.cancel();\r\n      }\r\n      // Clean up navigation button listeners\r\n      if ((window as any).instructionsNavCleanup) {\r\n        (window as any).instructionsNavCleanup();\r\n        delete (window as any).instructionsNavCleanup;\r\n      }\r\n      data.phase = 'instructions';\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Creates practice rounds with voice instructions and visual demonstrations\r\n * This helps participants understand the task before the actual trials\r\n */\r\nfunction createPracticeRound(items: string[], enable_tts: boolean = false, num_choices: number = 4, practice_rounds: number = 1) {\r\n  const practice_timeline = [];\r\n  \r\n  // Practice instruction screen\r\n  practice_timeline.push({\r\n    type: jsPsychHtmlButtonResponse,\r\n    stimulus: `\r\n      <div class=\"practice-container\">\r\n        <h2>${trial_text.practice_header}</h2>\r\n        <p class=\"practice-instruction\">${trial_text.practice_intro_message}</p>\r\n      </div>\r\n    `,\r\n    choices: [trial_text.continue_button],\r\n    button_html: function(choice) {\r\n      return `<button class=\"jspsych-btn continue-button\">${choice}</button>`;\r\n    },\r\n    data: {\r\n      task: 'practice-instruction'\r\n    }\r\n  });\r\n\r\n  // Create multiple practice rounds\r\n  for (let round = 0; round < practice_rounds; round++) {\r\n    // Create a practice trial set using different target each round\r\n    const target_index = round % items.length;\r\n    const practice_set = createTrialSet(items, target_index, num_choices);\r\n    \r\n    // Practice trial with voice instruction practice_look_instruction\r\n    practice_timeline.push({\r\n      type: jsPsychHtmlButtonResponse,\r\n      stimulus: `\r\n        <div class=\"trial-container\">\r\n          <div class=\"task-instructions\">\r\n            <p>${trial_text.practice_look_instruction}</p>\r\n          </div>\r\n          <div class=\"target-container\">\r\n            <div class=\"target-stimulus flash\">\r\n              ${practice_set.target}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `,\r\n      choices: [],\r\n      trial_duration: 3000, // Show for 3 seconds\r\n      on_start: function() {\r\n        if (enable_tts) {\r\n          // Wait for voices to load if needed\r\n          if (speechSynthesis.getVoices().length === 0) {\r\n            speechSynthesis.addEventListener('voiceschanged', () => {\r\n              speakText(trial_text.practice_look_instruction);\r\n            }, { once: true });\r\n          } else {\r\n            speakText(trial_text.practice_look_instruction);\r\n          }\r\n        }\r\n      },\r\n      data: {\r\n        task: 'practice-target-demo',\r\n        practice_round: round + 1\r\n      }\r\n    });\r\n\r\n    // Practice trial with voice instruction \"We are going to tap the picture down here\"\r\n    practice_timeline.push({\r\n      type: jsPsychHtmlButtonResponse,\r\n      stimulus: `\r\n        <div class=\"trial-container\">\r\n          <div class=\"task-instructions\">\r\n            <p>${trial_text.practice_tap_instruction}</p>\r\n          </div>\r\n          <div class=\"target-container\">\r\n            <div class=\"target-stimulus\">\r\n              ${practice_set.target}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `,\r\n      choices: practice_set.choices.map((_, i) => i.toString()),\r\n      button_html: function(choice, choice_index) {\r\n        const isCorrect = choice_index === practice_set.correct_answer;\r\n        const disabled = !isCorrect ? 'disabled' : '';\r\n        const disabledClass = !isCorrect ? 'disabled-choice' : '';\r\n        return `<button class=\"jspsych-btn choice-option ${disabledClass}\" data-choice=\"${choice_index}\" ${disabled}>${practice_set.choices[choice_index]}</button>`;\r\n      },\r\n      // No trial duration - only ends when correct choice is clicked\r\n      response_ends_trial: true,\r\n      on_start: function() {\r\n        if (enable_tts) {\r\n          // Wait for voices to load if needed\r\n          if (speechSynthesis.getVoices().length === 0) {\r\n            speechSynthesis.addEventListener('voiceschanged', () => {\r\n              speakText(trial_text.practice_tap_instruction);\r\n            }, { once: true });\r\n          } else {\r\n            speakText(trial_text.practice_tap_instruction);\r\n          }\r\n        }\r\n      },\r\n      on_load: function() {\r\n        // Set CSS custom property for number of choices for dynamic sizing\r\n        const btnGroup = document.querySelector('.jspsych-btn-group, #jspsych-html-button-response-btngroup') as HTMLElement;\r\n        if (btnGroup) {\r\n          btnGroup.style.setProperty('--num-choices', practice_set.choices.length.toString());\r\n        }\r\n        \r\n        // Add flashing animation for practice demo (1.5 seconds total)\r\n        setTimeout(() => {\r\n          const buttons = document.querySelectorAll('.choice-option:not(.disabled-choice)');\r\n          buttons.forEach(button => {\r\n            button.classList.add('flash-choices');\r\n          });\r\n        }, 500);\r\n\r\n        // Disable incorrect choices by preventing click events\r\n        setTimeout(() => {\r\n          const incorrectButtons = document.querySelectorAll('.choice-option.disabled-choice');\r\n          incorrectButtons.forEach(button => {\r\n            button.addEventListener('click', function(e) {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n              return false;\r\n            }, true);\r\n          });\r\n        }, 100);\r\n      },\r\n      on_finish: function(data: any) {\r\n        // Mark if they selected the correct answer\r\n        data.correct = data.response === practice_set.correct_answer;\r\n        data.practice_round = round + 1;\r\n        data.correct_answer = practice_set.correct_answer;\r\n      },\r\n      data: {\r\n        task: 'practice-choices-demo',\r\n        practice_round: round + 1,\r\n        correct_answer: practice_set.correct_answer\r\n      }\r\n    });\r\n  }\r\n\r\n  return practice_timeline;\r\n}\r\n\r\n/**\r\n * Creates ready screen asking if user is ready for the actual test\r\n */\r\nfunction createReadyScreen() {\r\n  return {\r\n    type: jsPsychHtmlButtonResponse,\r\n    stimulus: `\r\n      <div class=\"ready-screen\">\r\n        <h2>${trial_text.practice_complete_header}</h2>\r\n        <p>${trial_text.practice_complete_message}</p>\r\n      </div>\r\n    `,\r\n    choices: [trial_text.ready_button],\r\n    button_html: function(choice) {\r\n      return `<button class=\"jspsych-btn continue-button\">${choice}</button>`;\r\n    },\r\n    data: {\r\n      task: 'ready-screen'\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Generates trials for the main speeded matching task\r\n * Each trial presents a target and multiple choice options\r\n */\r\nfunction generateTrials(config: SpeedMatchingConfig) {\r\n  const items = config.test_items || test_items;\r\n  const num_trials = config.num_trials || 20;\r\n  const num_choices = config.num_choices || 4;\r\n  const trials = [];\r\n\r\n  for (let i = 0; i < num_trials; i++) {\r\n    // Randomly select a target item\r\n    const target_index = Math.floor(Math.random() * items.length);\r\n    const trial_set = createTrialSet(items, target_index, num_choices);\r\n    \r\n    trials.push({\r\n      target: trial_set.target,\r\n      choices: trial_set.choices,\r\n      correct_answer: trial_set.correct_answer,\r\n      target_index: trial_set.target_index,\r\n      trial_number: i + 1\r\n    });\r\n  }\r\n\r\n  return trials;\r\n}\r\n\r\n/**\r\n * Main function to create the complete speeded matching timeline\r\n * Includes instructions, practice, and test phases based on configuration\r\n */\r\nexport function createTimeline(jsPsych: JsPsych, config: SpeedMatchingConfig = {}) {\r\n  const {\r\n    enable_tts = true,\r\n    trial_timeout,\r\n    inter_trial_interval,\r\n    show_instructions = true,\r\n    show_practice = true,\r\n    practice_rounds = 1,\r\n    num_choices = 4,\r\n    instruction_texts = instruction_pages\r\n  } = config;\r\n\r\n  const items = config.test_items || test_items;\r\n  const trials = generateTrials(config);\r\n  const timeline = [];\r\n\r\n  // Add instructions if requested\r\n  if (show_instructions) {\r\n    const instructions = createInstructions(instruction_texts, enable_tts);\r\n    timeline.push(instructions);\r\n  }\r\n\r\n  // Add practice round if requested\r\n  if (show_practice) {\r\n    const practice_round = createPracticeRound(items, enable_tts, num_choices, practice_rounds);\r\n    practice_round.forEach(trial => timeline.push(trial));\r\n    \r\n    // Add ready screen after practice\r\n    timeline.push(createReadyScreen());\r\n  }\r\n\r\n  // Create main task trials\r\n  trials.forEach((trial, index) => {\r\n    // Create the main trial object\r\n    const mainTrial: any = {\r\n      type: jsPsychHtmlButtonResponse,\r\n      stimulus: `\r\n        <div class=\"trial-container\">\r\n          <div class=\"task-instructions\">\r\n            <p>${trial_text.main_task_prompt}</p>\r\n          </div>\r\n          <div class=\"target-container\">\r\n            <div class=\"target-stimulus\">\r\n              ${trial.target}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `,\r\n      choices: trial.choices.map((_, i) => i.toString()),\r\n      button_html: function(choice, choice_index) {\r\n        return `<button class=\"jspsych-btn choice-option\" data-choice=\"${choice_index}\">${trial.choices[choice_index]}</button>`;\r\n      },\r\n      on_load: function() {\r\n        // Set CSS custom property for number of choices for dynamic sizing\r\n        const btnGroup = document.querySelector('.jspsych-btn-group, #jspsych-html-button-response-btngroup') as HTMLElement;\r\n        if (btnGroup) {\r\n          btnGroup.style.setProperty('--num-choices', trial.choices.length.toString());\r\n        }\r\n        \r\n        // Add click handlers for visual feedback\r\n        const choices = document.querySelectorAll('.choice-option');\r\n        choices.forEach((choice, index) => {\r\n          choice.addEventListener('click', function() {\r\n            choice.classList.add('selected');\r\n          });\r\n        });\r\n      },\r\n      data: {\r\n        task: 'speeded-matching-trial',\r\n        trial_number: trial.trial_number,\r\n        correct_answer: trial.correct_answer,\r\n        target_index: trial.target_index,\r\n        target: trial.target,\r\n        choices: trial.choices\r\n      },\r\n      on_finish: function(data: any) {\r\n        // Calculate accuracy and response time\r\n        data.correct = data.response === data.correct_answer;\r\n        data.reaction_time = data.rt;\r\n        \r\n        // Stop any ongoing speech when trial ends\r\n        speechSynthesis.cancel();\r\n      }\r\n    };\r\n\r\n    // Only add trial_duration if trial_timeout is defined and not null\r\n    if (trial_timeout !== undefined && trial_timeout !== null) {\r\n      mainTrial.trial_duration = trial_timeout;\r\n    }\r\n\r\n    timeline.push(mainTrial);\r\n    \r\n    // Inter-trial interval (fixation cross) - only if defined and > 0\r\n    if (inter_trial_interval !== undefined && inter_trial_interval > 0 && index < trials.length - 1) {\r\n      timeline.push({\r\n        type: jsPsychHtmlButtonResponse,\r\n        stimulus: `<div class=\"fixation\">${trial_text.fixation_cross}</div>`,\r\n        choices: [],\r\n        trial_duration: inter_trial_interval,\r\n        data: {\r\n          task: 'inter-trial-interval'\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  // End screen\r\n  timeline.push({\r\n    type: jsPsychHtmlButtonResponse,\r\n    stimulus: `\r\n      <div class=\"end-screen\">\r\n        <h2>${trial_text.task_complete_header}</h2>\r\n        <p>${trial_text.task_complete_message}</p>\r\n      </div>\r\n    `,\r\n    choices: [trial_text.end_button],\r\n    button_html: function(choice) {\r\n      return `<button class=\"jspsych-btn continue-button\">${choice}</button>`;\r\n    },\r\n    data: {\r\n      task: 'end-screen'\r\n    }\r\n  });\r\n\r\n  return {\r\n    timeline: timeline\r\n  };\r\n}\r\n\r\n/**\r\n * Function to calculate accuracy and reaction time statistics \r\n * just for exporting with utils\r\n*/\r\nfunction calculatePerformance(data: any[]) {\r\n    const trial_data = data.filter(d => d.task === 'speeded-matching-trial');\r\n    const correct = trial_data.filter(d => d.correct).length;\r\n    const total = trial_data.length;\r\n    const accuracy = total > 0 ? (correct / total) * 100 : 0;\r\n    \r\n    const valid_rts = trial_data.filter(d => d.correct && d.rt !== null).map(d => d.rt);\r\n    const mean_rt = valid_rts.length > 0 ? valid_rts.reduce((a, b) => a + b, 0) / valid_rts.length : null;\r\n    \r\n    // Calculate performance by target type\r\n    const target_performance = {};\r\n    trial_data.forEach(trial => {\r\n      const target_index = trial.target_index;\r\n      if (!target_performance[target_index]) {\r\n        target_performance[target_index] = {\r\n          correct: 0,\r\n          total: 0,\r\n          reaction_times: []\r\n        };\r\n      }\r\n      target_performance[target_index].total++;\r\n      if (trial.correct) {\r\n        target_performance[target_index].correct++;\r\n        if (trial.rt !== null) {\r\n          target_performance[target_index].reaction_times.push(trial.rt);\r\n        }\r\n      }\r\n    });\r\n    \r\n    return {\r\n      overall: {\r\n        accuracy,\r\n        mean_reaction_time: mean_rt,\r\n        total_trials: total,\r\n        correct_trials: correct\r\n      },\r\n      by_target: target_performance\r\n    };\r\n  }\r\n\r\n\r\nexport const timelineUnits = {\r\n  instructions: \"Instructions for the speeded matching task\",\r\n  practice: \"Practice round with voice instructions and demonstrations\", \r\n  readyScreen: \"Confirmation screen before starting the main task\",\r\n  trial: \"Single speeded matching trial with target and choice options\",\r\n  interTrialInterval: \"Fixation cross between trials\",\r\n  endScreen: \"Task completion screen\"\r\n}\r\n\r\nexport const utils = {\r\n  generateTrials,\r\n  createInstructions,\r\n  createPracticeRound,\r\n  createReadyScreen,\r\n  speakText,\r\n  createTrialSet,\r\n  getRandomTestItems,\r\n  calculatePerformance\r\n}\r\n\r\n// Export text and test items for external use\r\nexport { trial_text, instruction_pages, test_items, createInstructions }\r\n\r\n// Default export for convenience\r\nexport default { createTimeline, timelineUnits, utils }"]}